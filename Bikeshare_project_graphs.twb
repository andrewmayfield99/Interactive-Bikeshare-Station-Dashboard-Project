<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.25.0114.1153                               -->
<workbook original-version='18.1' source-build='2024.3.3 (20243.25.0114.1153)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <ParameterAction />
    <ParameterActionClearSelection />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <repository-location id='InteractiveBikeshareStationDashboard2015-2024' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
        <calculation class='tableau' formula='#2015-01-01#' />
        <aliases>
          <alias key='#2015-01-01#' value='2015' />
          <alias key='#2016-01-01#' value='2016' />
          <alias key='#2017-01-01#' value='2017' />
          <alias key='#2018-01-01#' value='2018' />
          <alias key='#2019-01-01#' value='2019' />
          <alias key='#2020-01-01#' value='2020' />
          <alias key='#2021-01-01#' value='2021' />
          <alias key='#2022-01-01#' value='2022' />
          <alias key='#2023-01-01#' value='2023' />
          <alias key='#2024-01-01#' value='2024' />
        </aliases>
        <members>
          <member alias='2015' value='#2015-01-01#' />
          <member alias='2016' value='#2016-01-01#' />
          <member alias='2017' value='#2017-01-01#' />
          <member alias='2018' value='#2018-01-01#' />
          <member alias='2019' value='#2019-01-01#' />
          <member alias='2020' value='#2020-01-01#' />
          <member alias='2021' value='#2021-01-01#' />
          <member alias='2022' value='#2022-01-01#' />
          <member alias='2023' value='#2023-01-01#' />
          <member alias='2024' value='#2024-01-01#' />
          <member value='#2024-08-21#' />
        </members>
      </column>
      <column caption='Select City' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alamo Heights&quot;'>
        <calculation class='tableau' formula='&quot;Alamo Heights&quot;' />
        <members>
          <member value='&quot;Alamo Heights&quot;' />
          <member value='&quot;Albany&quot;' />
          <member value='&quot;Albuquerque&quot;' />
          <member value='&quot;Alexandria&quot;' />
          <member value='&quot;Allston&quot;' />
          <member value='&quot;Amherst&quot;' />
          <member value='&quot;Ann Arbor&quot;' />
          <member value='&quot;Arlington&quot;' />
          <member value='&quot;Ashland&quot;' />
          <member value='&quot;Aspen&quot;' />
          <member value='&quot;Astoria&quot;' />
          <member value='&quot;Atlanta&quot;' />
          <member value='&quot;Auburndale&quot;' />
          <member value='&quot;Aurora&quot;' />
          <member value='&quot;Austin&quot;' />
          <member value='&quot;Aventura&quot;' />
          <member value='&quot;Baltimore&quot;' />
          <member value='&quot;Basalt&quot;' />
          <member value='&quot;Baton Rouge&quot;' />
          <member value='&quot;Battle Creek&quot;' />
          <member value='&quot;Bay Harbor Islands&quot;' />
          <member value='&quot;Bayonne&quot;' />
          <member value='&quot;Belleville&quot;' />
          <member value='&quot;Bellevue&quot;' />
          <member value='&quot;Beloit&quot;' />
          <member value='&quot;Berkeley&quot;' />
          <member value='&quot;Berkley&quot;' />
          <member value='&quot;Bethesda&quot;' />
          <member value='&quot;Beverly Hills&quot;' />
          <member value='&quot;Birmingham&quot;' />
          <member value='&quot;Bishop&quot;' />
          <member value='&quot;Blacksburg&quot;' />
          <member value='&quot;Bloomington&quot;' />
          <member value='&quot;Boise&quot;' />
          <member value='&quot;Boston&quot;' />
          <member value='&quot;Boulder&quot;' />
          <member value='&quot;Boyds&quot;' />
          <member value='&quot;Brentwood&quot;' />
          <member value='&quot;Brighton&quot;' />
          <member value='&quot;Broken Arrow&quot;' />
          <member value='&quot;Bronx&quot;' />
          <member value='&quot;Brookline&quot;' />
          <member value='&quot;Brooklyn&quot;' />
          <member value='&quot;Brooks AFB&quot;' />
          <member value='&quot;Brownsville&quot;' />
          <member value='&quot;Buffalo&quot;' />
          <member value='&quot;Burlington&quot;' />
          <member value='&quot;Cambridge&quot;' />
          <member value='&quot;Capitol Heights&quot;' />
          <member value='&quot;Cardiff by the Sea&quot;' />
          <member value='&quot;Carmel&quot;' />
          <member value='&quot;Carrollton&quot;' />
          <member value='&quot;Cary&quot;' />
          <member value='&quot;Celebration&quot;' />
          <member value='&quot;Charleston&quot;' />
          <member value='&quot;Charlestown&quot;' />
          <member value='&quot;Charlotte&quot;' />
          <member value='&quot;Chattanooga&quot;' />
          <member value='&quot;Chelsea&quot;' />
          <member value='&quot;Chestnut Hill&quot;' />
          <member value='&quot;Chevy Chase&quot;' />
          <member value='&quot;Chicago&quot;' />
          <member value='&quot;Chicopee&quot;' />
          <member value='&quot;Christiansburg&quot;' />
          <member value='&quot;Cincinnati&quot;' />
          <member value='&quot;Cleveland&quot;' />
          <member value='&quot;Clive&quot;' />
          <member value='&quot;Cohoes&quot;' />
          <member value='&quot;College Park&quot;' />
          <member value='&quot;Colonie&quot;' />
          <member value='&quot;Columbia&quot;' />
          <member value='&quot;Columbus&quot;' />
          <member value='&quot;Concordia&quot;' />
          <member value='&quot;Corona&quot;' />
          <member value='&quot;Corpus Christi&quot;' />
          <member value='&quot;Corvallis&quot;' />
          <member value='&quot;Council Bluffs&quot;' />
          <member value='&quot;Covington&quot;' />
          <member value='&quot;Culver City&quot;' />
          <member value='&quot;Curtis Bay&quot;' />
          <member value='&quot;Dallas&quot;' />
          <member value='&quot;Dania Beach&quot;' />
          <member value='&quot;Danville&quot;' />
          <member value='&quot;Dayton&quot;' />
          <member value='&quot;Dearborn&quot;' />
          <member value='&quot;Denver&quot;' />
          <member value='&quot;Derwood&quot;' />
          <member value='&quot;Des Moines&quot;' />
          <member value='&quot;Detroit&quot;' />
          <member value='&quot;Dorchester&quot;' />
          <member value='&quot;East Boston&quot;' />
          <member value='&quot;East Elmhurst&quot;' />
          <member value='&quot;East Peoria&quot;' />
          <member value='&quot;Easthampton&quot;' />
          <member value='&quot;El Jebel&quot;' />
          <member value='&quot;El Paso&quot;' />
          <member value='&quot;Ellicott City&quot;' />
          <member value='&quot;Ellsworth&quot;' />
          <member value='&quot;Elmhurst&quot;' />
          <member value='&quot;Emeryville&quot;' />
          <member value='&quot;Encinitas&quot;' />
          <member value='&quot;Eugene&quot;' />
          <member value='&quot;Evans&quot;' />
          <member value='&quot;Evanston&quot;' />
          <member value='&quot;Everett&quot;' />
          <member value='&quot;Fairfax&quot;' />
          <member value='&quot;Falcon Heights&quot;' />
          <member value='&quot;Falls Church&quot;' />
          <member value='&quot;Fargo&quot;' />
          <member value='&quot;Ferndale&quot;' />
          <member value='&quot;Fort Collins&quot;' />
          <member value='&quot;Fort Lauderdale&quot;' />
          <member value='&quot;Fort Myer&quot;' />
          <member value='&quot;Fort Pierce&quot;' />
          <member value='&quot;Fort Snelling&quot;' />
          <member value='&quot;Fort Wayne&quot;' />
          <member value='&quot;Fort Worth&quot;' />
          <member value='&quot;Gainesville&quot;' />
          <member value='&quot;Garden City&quot;' />
          <member value='&quot;Golden Valley&quot;' />
          <member value='&quot;Greenbelt&quot;' />
          <member value='&quot;Greenville&quot;' />
          <member value='&quot;Guttenberg&quot;' />
          <member value='&quot;Hailey&quot;' />
          <member value='&quot;Hallandale Beach&quot;' />
          <member value='&quot;Harlingen&quot;' />
          <member value='&quot;Harrisburg&quot;' />
          <member value='&quot;Hastings&quot;' />
          <member value='&quot;Hoboken&quot;' />
          <member value='&quot;Hollywood&quot;' />
          <member value='&quot;Holyoke&quot;' />
          <member value='&quot;Honolulu&quot;' />
          <member value='&quot;Houston&quot;' />
          <member value='&quot;Huntingburg&quot;' />
          <member value='&quot;Huntington Woods&quot;' />
          <member value='&quot;Huntsville&quot;' />
          <member value='&quot;Hutchinson Island&quot;' />
          <member value='&quot;Hyattsville&quot;' />
          <member value='&quot;Hyde Park&quot;' />
          <member value='&quot;Indianapolis&quot;' />
          <member value='&quot;Jackson&quot;' />
          <member value='&quot;Jackson Heights&quot;' />
          <member value='&quot;Jamaica Plain&quot;' />
          <member value='&quot;Jeffersonville&quot;' />
          <member value='&quot;Jenks&quot;' />
          <member value='&quot;Jersey City&quot;' />
          <member value='&quot;Kansas City&quot;' />
          <member value='&quot;Ketchum&quot;' />
          <member value='&quot;Key West&quot;' />
          <member value='&quot;Lakeland&quot;' />
          <member value='&quot;Las Vegas&quot;' />
          <member value='&quot;Lauderdale by the Sea&quot;' />
          <member value='&quot;Lincoln&quot;' />
          <member value='&quot;Long Beach&quot;' />
          <member value='&quot;Long Island City&quot;' />
          <member value='&quot;Longmont&quot;' />
          <member value='&quot;Los Angeles&quot;' />
          <member value='&quot;Louisville&quot;' />
          <member value='&quot;Madison&quot;' />
          <member value='&quot;Manchester&quot;' />
          <member value='&quot;Manitowish Waters&quot;' />
          <member value='&quot;Mankato&quot;' />
          <member value='&quot;Marina del Rey&quot;' />
          <member value='&quot;Marion&quot;' />
          <member value='&quot;Marlborough&quot;' />
          <member value='&quot;Maspeth&quot;' />
          <member value='&quot;Mattapan&quot;' />
          <member value='&quot;McAllen&quot;' />
          <member value='&quot;McFarland&quot;' />
          <member value='&quot;McLean&quot;' />
          <member value='&quot;Medford&quot;' />
          <member value='&quot;Memphis&quot;' />
          <member value='&quot;Menands&quot;' />
          <member value='&quot;Mesa&quot;' />
          <member value='&quot;Miami&quot;' />
          <member value='&quot;Miami Beach&quot;' />
          <member value='&quot;Milwaukee&quot;' />
          <member value='&quot;Minneapolis&quot;' />
          <member value='&quot;Monona&quot;' />
          <member value='&quot;Morristown&quot;' />
          <member value='&quot;Mount Rainier&quot;' />
          <member value='&quot;Mountain View&quot;' />
          <member value='&quot;Nashville&quot;' />
          <member value='&quot;New Haven&quot;' />
          <member value='&quot;New Orleans&quot;' />
          <member value='&quot;New York&quot;' />
          <member value='&quot;Newport&quot;' />
          <member value='&quot;Newton&quot;' />
          <member value='&quot;Niagara Falls&quot;' />
          <member value='&quot;Normal&quot;' />
          <member value='&quot;North Bergen&quot;' />
          <member value='&quot;North Bethesda&quot;' />
          <member value='&quot;North Hollywood&quot;' />
          <member value='&quot;North Kansas City&quot;' />
          <member value='&quot;Northampton&quot;' />
          <member value='&quot;Oak Park&quot;' />
          <member value='&quot;Oakland&quot;' />
          <member value='&quot;Ogden&quot;' />
          <member value='&quot;Oklahoma City&quot;' />
          <member value='&quot;Omaha&quot;' />
          <member value='&quot;Orlando&quot;' />
          <member value='&quot;Oxon Hill&quot;' />
          <member value='&quot;Palm Beach&quot;' />
          <member value='&quot;Palo Alto&quot;' />
          <member value='&quot;Papillion&quot;' />
          <member value='&quot;Pasadena&quot;' />
          <member value='&quot;Peoria&quot;' />
          <member value='&quot;Peoria Heights&quot;' />
          <member value='&quot;Philadelphia&quot;' />
          <member value='&quot;Phoenix&quot;' />
          <member value='&quot;Pittsburgh&quot;' />
          <member value='&quot;Playa del Rey&quot;' />
          <member value='&quot;Playa Vista&quot;' />
          <member value='&quot;Pompano Beach&quot;' />
          <member value='&quot;Port Saint Lucie&quot;' />
          <member value='&quot;Portland&quot;' />
          <member value='&quot;Portsmouth&quot;' />
          <member value='&quot;Queens&quot;' />
          <member value='&quot;Raleigh&quot;' />
          <member value='&quot;Rapid City&quot;' />
          <member value='&quot;Redwood City&quot;' />
          <member value='&quot;Rego Park&quot;' />
          <member value='&quot;Reston&quot;' />
          <member value='&quot;Revere&quot;' />
          <member value='&quot;Richmond&quot;' />
          <member value='&quot;Ridgewood&quot;' />
          <member value='&quot;Riverdale&quot;' />
          <member value='&quot;Roanoke&quot;' />
          <member value='&quot;Rock Hill&quot;' />
          <member value='&quot;Rockville&quot;' />
          <member value='&quot;Roslindale&quot;' />
          <member value='&quot;Roxbury&quot;' />
          <member value='&quot;Royal Oak&quot;' />
          <member value='&quot;Saint Paul&quot;' />
          <member value='&quot;Salem&quot;' />
          <member value='&quot;Salina&quot;' />
          <member value='&quot;Salt Lake City&quot;' />
          <member value='&quot;San Antonio&quot;' />
          <member value='&quot;San Diego&quot;' />
          <member value='&quot;San Francisco&quot;' />
          <member value='&quot;San Jose&quot;' />
          <member value='&quot;San Mateo&quot;' />
          <member value='&quot;San Pedro&quot;' />
          <member value='&quot;San Ramon&quot;' />
          <member value='&quot;Santa Barbara&quot;' />
          <member value='&quot;Santa Monica&quot;' />
          <member value='&quot;Saratoga Springs&quot;' />
          <member value='&quot;Savannah&quot;' />
          <member value='&quot;Schenectady&quot;' />
          <member value='&quot;Seattle&quot;' />
          <member value='&quot;Shorewood&quot;' />
          <member value='&quot;Silver Spring&quot;' />
          <member value='&quot;Smyrna&quot;' />
          <member value='&quot;Snowmass Village&quot;' />
          <member value='&quot;Somerville&quot;' />
          <member value='&quot;South Boston&quot;' />
          <member value='&quot;South Burlington&quot;' />
          <member value='&quot;South Euclid&quot;' />
          <member value='&quot;South Hadley&quot;' />
          <member value='&quot;South Salt Lake&quot;' />
          <member value='&quot;Spartanburg&quot;' />
          <member value='&quot;Springfield&quot;' />
          <member value='&quot;St. Augustine&quot;' />
          <member value='&quot;St. Petersburg&quot;' />
          <member value='&quot;Studio City&quot;' />
          <member value='&quot;Sun Valley&quot;' />
          <member value='&quot;Sunnyside&quot;' />
          <member value='&quot;Superior&quot;' />
          <member value='&quot;Surfside&quot;' />
          <member value='&quot;Takoma Park&quot;' />
          <member value='&quot;Tampa&quot;' />
          <member value='&quot;Tempe&quot;' />
          <member value='&quot;Temple Hills&quot;' />
          <member value='&quot;Toledo&quot;' />
          <member value='&quot;Toluca Lake&quot;' />
          <member value='&quot;Tonawanda&quot;' />
          <member value='&quot;Topeka&quot;' />
          <member value='&quot;Troy&quot;' />
          <member value='&quot;Tucson&quot;' />
          <member value='&quot;Tulsa&quot;' />
          <member value='&quot;University Park&quot;' />
          <member value='&quot;Upper Marlboro&quot;' />
          <member value='&quot;Valentine&quot;' />
          <member value='&quot;Valley Village&quot;' />
          <member value='&quot;Venice&quot;' />
          <member value='&quot;Vienna&quot;' />
          <member value='&quot;Vinton&quot;' />
          <member value='&quot;Washington&quot;' />
          <member value='&quot;Watertown&quot;' />
          <member value='&quot;Watervliet&quot;' />
          <member value='&quot;Wauwatosa&quot;' />
          <member value='&quot;Weehawken&quot;' />
          <member value='&quot;West Allis&quot;' />
          <member value='&quot;West Hollywood&quot;' />
          <member value='&quot;West Memphis&quot;' />
          <member value='&quot;West New York&quot;' />
          <member value='&quot;West Palm Beach&quot;' />
          <member value='&quot;West Roxbury&quot;' />
          <member value='&quot;West Springfield&quot;' />
          <member value='&quot;Westfield&quot;' />
          <member value='&quot;Westminster&quot;' />
          <member value='&quot;White City&quot;' />
          <member value='&quot;Wichita&quot;' />
          <member value='&quot;Wilmington&quot;' />
          <member value='&quot;Windsor Heights&quot;' />
          <member value='&quot;Winooski&quot;' />
          <member value='&quot;Winston-Salem&quot;' />
          <member value='&quot;Winter Park&quot;' />
          <member value='&quot;Woodside&quot;' />
        </members>
      </column>
      <column caption='Select Zipcode' datatype='integer' default-format='*#####' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1002'>
        <calculation class='tableau' formula='1002' />
        <members>
          <member value='1002' />
          <member value='1003' />
          <member value='1013' />
          <member value='1020' />
          <member value='1027' />
          <member value='1040' />
          <member value='1060' />
          <member value='1062' />
          <member value='1063' />
          <member value='1075' />
          <member value='1089' />
          <member value='1103' />
          <member value='1104' />
          <member value='1105' />
          <member value='1107' />
          <member value='1109' />
          <member value='1752' />
          <member value='1970' />
          <member value='2108' />
          <member value='2109' />
          <member value='2110' />
          <member value='2111' />
          <member value='2113' />
          <member value='2114' />
          <member value='2115' />
          <member value='2116' />
          <member value='2118' />
          <member value='2119' />
          <member value='2120' />
          <member value='2121' />
          <member value='2122' />
          <member value='2124' />
          <member value='2125' />
          <member value='2126' />
          <member value='2127' />
          <member value='2128' />
          <member value='2129' />
          <member value='2130' />
          <member value='2131' />
          <member value='2132' />
          <member value='2134' />
          <member value='2135' />
          <member value='2136' />
          <member value='2138' />
          <member value='2139' />
          <member value='2140' />
          <member value='2141' />
          <member value='2142' />
          <member value='2143' />
          <member value='2144' />
          <member value='2145' />
          <member value='2148' />
          <member value='2149' />
          <member value='2150' />
          <member value='2151' />
          <member value='2155' />
          <member value='2163' />
          <member value='2199' />
          <member value='2210' />
          <member value='2215' />
          <member value='2445' />
          <member value='2446' />
          <member value='2458' />
          <member value='2459' />
          <member value='2460' />
          <member value='2461' />
          <member value='2465' />
          <member value='2466' />
          <member value='2467' />
          <member value='2472' />
          <member value='2474' />
          <member value='3101' />
          <member value='3102' />
          <member value='3104' />
          <member value='3801' />
          <member value='5401' />
          <member value='5403' />
          <member value='5404' />
          <member value='5405' />
          <member value='5408' />
          <member value='6510' />
          <member value='6511' />
          <member value='6513' />
          <member value='6519' />
          <member value='7002' />
          <member value='7030' />
          <member value='7047' />
          <member value='7086' />
          <member value='7087' />
          <member value='7093' />
          <member value='7302' />
          <member value='7304' />
          <member value='7305' />
          <member value='7306' />
          <member value='7307' />
          <member value='7310' />
          <member value='7311' />
          <member value='7940' />
          <member value='7960' />
          <member value='10001' />
          <member value='10002' />
          <member value='10003' />
          <member value='10004' />
          <member value='10005' />
          <member value='10006' />
          <member value='10007' />
          <member value='10009' />
          <member value='10010' />
          <member value='10011' />
          <member value='10012' />
          <member value='10013' />
          <member value='10014' />
          <member value='10016' />
          <member value='10017' />
          <member value='10018' />
          <member value='10019' />
          <member value='10020' />
          <member value='10021' />
          <member value='10022' />
          <member value='10023' />
          <member value='10024' />
          <member value='10025' />
          <member value='10026' />
          <member value='10027' />
          <member value='10028' />
          <member value='10029' />
          <member value='10030' />
          <member value='10031' />
          <member value='10032' />
          <member value='10033' />
          <member value='10034' />
          <member value='10035' />
          <member value='10036' />
          <member value='10037' />
          <member value='10038' />
          <member value='10039' />
          <member value='10040' />
          <member value='10044' />
          <member value='10065' />
          <member value='10069' />
          <member value='10075' />
          <member value='10128' />
          <member value='10155' />
          <member value='10167' />
          <member value='10280' />
          <member value='10281' />
          <member value='10282' />
          <member value='10451' />
          <member value='10452' />
          <member value='10453' />
          <member value='10454' />
          <member value='10455' />
          <member value='10456' />
          <member value='10457' />
          <member value='10458' />
          <member value='10459' />
          <member value='10460' />
          <member value='10463' />
          <member value='10465' />
          <member value='10467' />
          <member value='10468' />
          <member value='10469' />
          <member value='10474' />
          <member value='11101' />
          <member value='11102' />
          <member value='11103' />
          <member value='11104' />
          <member value='11105' />
          <member value='11106' />
          <member value='11109' />
          <member value='11201' />
          <member value='11203' />
          <member value='11205' />
          <member value='11206' />
          <member value='11207' />
          <member value='11211' />
          <member value='11212' />
          <member value='11213' />
          <member value='11215' />
          <member value='11216' />
          <member value='11217' />
          <member value='11218' />
          <member value='11220' />
          <member value='11221' />
          <member value='11222' />
          <member value='11225' />
          <member value='11226' />
          <member value='11230' />
          <member value='11231' />
          <member value='11232' />
          <member value='11233' />
          <member value='11237' />
          <member value='11238' />
          <member value='11249' />
          <member value='11251' />
          <member value='11252' />
          <member value='11368' />
          <member value='11369' />
          <member value='11370' />
          <member value='11372' />
          <member value='11373' />
          <member value='11375' />
          <member value='11377' />
          <member value='11378' />
          <member value='11379' />
          <member value='11385' />
          <member value='11432' />
          <member value='11561' />
          <member value='11581' />
          <member value='12047' />
          <member value='12180' />
          <member value='12182' />
          <member value='12189' />
          <member value='12202' />
          <member value='12203' />
          <member value='12204' />
          <member value='12205' />
          <member value='12206' />
          <member value='12207' />
          <member value='12208' />
          <member value='12209' />
          <member value='12210' />
          <member value='12211' />
          <member value='12222' />
          <member value='12242' />
          <member value='12303' />
          <member value='12305' />
          <member value='12307' />
          <member value='12308' />
          <member value='12309' />
          <member value='12866' />
          <member value='14150' />
          <member value='14174' />
          <member value='14201' />
          <member value='14202' />
          <member value='14203' />
          <member value='14204' />
          <member value='14206' />
          <member value='14207' />
          <member value='14208' />
          <member value='14209' />
          <member value='14210' />
          <member value='14211' />
          <member value='14212' />
          <member value='14213' />
          <member value='14214' />
          <member value='14215' />
          <member value='14216' />
          <member value='14217' />
          <member value='14222' />
          <member value='14228' />
          <member value='14260' />
          <member value='14261' />
          <member value='14301' />
          <member value='14303' />
          <member value='14304' />
          <member value='14305' />
          <member value='15201' />
          <member value='15202' />
          <member value='15203' />
          <member value='15205' />
          <member value='15206' />
          <member value='15207' />
          <member value='15208' />
          <member value='15212' />
          <member value='15213' />
          <member value='15215' />
          <member value='15217' />
          <member value='15219' />
          <member value='15222' />
          <member value='15224' />
          <member value='15229' />
          <member value='15232' />
          <member value='15236' />
          <member value='15261' />
          <member value='16335' />
          <member value='17101' />
          <member value='17102' />
          <member value='17110' />
          <member value='19020' />
          <member value='19102' />
          <member value='19103' />
          <member value='19104' />
          <member value='19106' />
          <member value='19107' />
          <member value='19112' />
          <member value='19121' />
          <member value='19122' />
          <member value='19123' />
          <member value='19125' />
          <member value='19127' />
          <member value='19129' />
          <member value='19130' />
          <member value='19131' />
          <member value='19132' />
          <member value='19133' />
          <member value='19139' />
          <member value='19140' />
          <member value='19143' />
          <member value='19145' />
          <member value='19146' />
          <member value='19147' />
          <member value='19148' />
          <member value='20001' />
          <member value='20002' />
          <member value='20003' />
          <member value='20004' />
          <member value='20005' />
          <member value='20006' />
          <member value='20007' />
          <member value='20008' />
          <member value='20009' />
          <member value='20010' />
          <member value='20011' />
          <member value='20012' />
          <member value='20015' />
          <member value='20016' />
          <member value='20017' />
          <member value='20018' />
          <member value='20019' />
          <member value='20020' />
          <member value='20024' />
          <member value='20032' />
          <member value='20036' />
          <member value='20037' />
          <member value='20052' />
          <member value='20057' />
          <member value='20059' />
          <member value='20064' />
          <member value='20170' />
          <member value='20190' />
          <member value='20191' />
          <member value='20194' />
          <member value='20202' />
          <member value='20230' />
          <member value='20240' />
          <member value='20245' />
          <member value='20520' />
          <member value='20526' />
          <member value='20530' />
          <member value='20534' />
          <member value='20536' />
          <member value='20547' />
          <member value='20549' />
          <member value='20560' />
          <member value='20566' />
          <member value='20598' />
          <member value='20712' />
          <member value='20722' />
          <member value='20737' />
          <member value='20740' />
          <member value='20742' />
          <member value='20743' />
          <member value='20745' />
          <member value='20748' />
          <member value='20770' />
          <member value='20774' />
          <member value='20781' />
          <member value='20782' />
          <member value='20783' />
          <member value='20814' />
          <member value='20815' />
          <member value='20816' />
          <member value='20841' />
          <member value='20850' />
          <member value='20852' />
          <member value='20855' />
          <member value='20901' />
          <member value='20902' />
          <member value='20904' />
          <member value='20910' />
          <member value='20912' />
          <member value='21043' />
          <member value='21044' />
          <member value='21045' />
          <member value='21201' />
          <member value='21202' />
          <member value='21205' />
          <member value='21213' />
          <member value='21223' />
          <member value='21224' />
          <member value='21226' />
          <member value='21230' />
          <member value='21231' />
          <member value='22030' />
          <member value='22031' />
          <member value='22042' />
          <member value='22043' />
          <member value='22044' />
          <member value='22046' />
          <member value='22101' />
          <member value='22102' />
          <member value='22150' />
          <member value='22180' />
          <member value='22181' />
          <member value='22182' />
          <member value='22201' />
          <member value='22202' />
          <member value='22203' />
          <member value='22204' />
          <member value='22205' />
          <member value='22206' />
          <member value='22207' />
          <member value='22209' />
          <member value='22211' />
          <member value='22213' />
          <member value='22301' />
          <member value='22302' />
          <member value='22304' />
          <member value='22305' />
          <member value='22308' />
          <member value='22310' />
          <member value='22311' />
          <member value='22314' />
          <member value='23219' />
          <member value='23220' />
          <member value='23222' />
          <member value='23223' />
          <member value='23224' />
          <member value='23230' />
          <member value='23284' />
          <member value='24011' />
          <member value='24012' />
          <member value='24013' />
          <member value='24014' />
          <member value='24015' />
          <member value='24016' />
          <member value='24017' />
          <member value='24060' />
          <member value='24061' />
          <member value='24073' />
          <member value='24179' />
          <member value='24540' />
          <member value='24541' />
          <member value='27101' />
          <member value='27104' />
          <member value='27107' />
          <member value='27127' />
          <member value='27513' />
          <member value='27601' />
          <member value='27603' />
          <member value='27604' />
          <member value='27605' />
          <member value='27606' />
          <member value='27607' />
          <member value='27610' />
          <member value='28202' />
          <member value='28203' />
          <member value='28204' />
          <member value='28205' />
          <member value='28206' />
          <member value='28209' />
          <member value='28210' />
          <member value='28216' />
          <member value='28280' />
          <member value='28282' />
          <member value='29302' />
          <member value='29303' />
          <member value='29306' />
          <member value='29401' />
          <member value='29403' />
          <member value='29424' />
          <member value='29425' />
          <member value='29601' />
          <member value='29730' />
          <member value='30080' />
          <member value='30082' />
          <member value='30117' />
          <member value='30303' />
          <member value='30305' />
          <member value='30306' />
          <member value='30307' />
          <member value='30308' />
          <member value='30309' />
          <member value='30310' />
          <member value='30312' />
          <member value='30313' />
          <member value='30314' />
          <member value='30315' />
          <member value='30316' />
          <member value='30317' />
          <member value='30318' />
          <member value='30326' />
          <member value='30342' />
          <member value='30350' />
          <member value='30363' />
          <member value='30809' />
          <member value='31401' />
          <member value='32080' />
          <member value='32084' />
          <member value='32601' />
          <member value='32789' />
          <member value='32801' />
          <member value='32803' />
          <member value='32804' />
          <member value='32805' />
          <member value='32806' />
          <member value='32814' />
          <member value='32827' />
          <member value='33004' />
          <member value='33009' />
          <member value='33019' />
          <member value='33040' />
          <member value='33062' />
          <member value='33069' />
          <member value='33125' />
          <member value='33127' />
          <member value='33128' />
          <member value='33129' />
          <member value='33130' />
          <member value='33131' />
          <member value='33132' />
          <member value='33133' />
          <member value='33135' />
          <member value='33136' />
          <member value='33137' />
          <member value='33138' />
          <member value='33139' />
          <member value='33140' />
          <member value='33141' />
          <member value='33154' />
          <member value='33160' />
          <member value='33180' />
          <member value='33301' />
          <member value='33304' />
          <member value='33305' />
          <member value='33308' />
          <member value='33312' />
          <member value='33316' />
          <member value='33401' />
          <member value='33405' />
          <member value='33480' />
          <member value='33589' />
          <member value='33602' />
          <member value='33603' />
          <member value='33604' />
          <member value='33605' />
          <member value='33606' />
          <member value='33607' />
          <member value='33609' />
          <member value='33613' />
          <member value='33701' />
          <member value='33704' />
          <member value='33705' />
          <member value='33711' />
          <member value='33712' />
          <member value='33713' />
          <member value='33715' />
          <member value='33780' />
          <member value='33801' />
          <member value='33803' />
          <member value='33815' />
          <member value='34747' />
          <member value='34949' />
          <member value='34950' />
          <member value='34952' />
          <member value='34953' />
          <member value='34984' />
          <member value='35203' />
          <member value='35204' />
          <member value='35205' />
          <member value='35206' />
          <member value='35211' />
          <member value='35215' />
          <member value='35222' />
          <member value='35233' />
          <member value='35801' />
          <member value='35805' />
          <member value='37201' />
          <member value='37203' />
          <member value='37204' />
          <member value='37205' />
          <member value='37206' />
          <member value='37208' />
          <member value='37209' />
          <member value='37210' />
          <member value='37212' />
          <member value='37213' />
          <member value='37214' />
          <member value='37219' />
          <member value='37402' />
          <member value='37403' />
          <member value='37404' />
          <member value='37405' />
          <member value='37406' />
          <member value='37408' />
          <member value='37409' />
          <member value='38103' />
          <member value='38104' />
          <member value='38105' />
          <member value='38106' />
          <member value='38111' />
          <member value='38112' />
          <member value='38114' />
          <member value='38120' />
          <member value='38126' />
          <member value='38134' />
          <member value='40202' />
          <member value='40203' />
          <member value='40204' />
          <member value='40206' />
          <member value='40208' />
          <member value='40292' />
          <member value='41011' />
          <member value='41014' />
          <member value='41071' />
          <member value='41073' />
          <member value='43201' />
          <member value='43202' />
          <member value='43203' />
          <member value='43205' />
          <member value='43206' />
          <member value='43209' />
          <member value='43210' />
          <member value='43211' />
          <member value='43212' />
          <member value='43214' />
          <member value='43215' />
          <member value='43219' />
          <member value='43221' />
          <member value='43222' />
          <member value='43230' />
          <member value='43604' />
          <member value='43605' />
          <member value='43659' />
          <member value='44102' />
          <member value='44103' />
          <member value='44106' />
          <member value='44113' />
          <member value='44114' />
          <member value='44115' />
          <member value='44121' />
          <member value='45202' />
          <member value='45203' />
          <member value='45204' />
          <member value='45206' />
          <member value='45207' />
          <member value='45214' />
          <member value='45217' />
          <member value='45219' />
          <member value='45220' />
          <member value='45223' />
          <member value='45226' />
          <member value='45255' />
          <member value='45402' />
          <member value='45403' />
          <member value='45404' />
          <member value='45405' />
          <member value='45409' />
          <member value='45410' />
          <member value='45417' />
          <member value='45422' />
          <member value='45469' />
          <member value='46032' />
          <member value='46074' />
          <member value='46202' />
          <member value='46203' />
          <member value='46204' />
          <member value='46205' />
          <member value='46208' />
          <member value='46220' />
          <member value='46222' />
          <member value='46225' />
          <member value='46229' />
          <member value='46240' />
          <member value='46280' />
          <member value='46802' />
          <member value='46803' />
          <member value='47130' />
          <member value='47201' />
          <member value='47542' />
          <member value='48067' />
          <member value='48070' />
          <member value='48072' />
          <member value='48104' />
          <member value='48105' />
          <member value='48109' />
          <member value='48124' />
          <member value='48126' />
          <member value='48201' />
          <member value='48202' />
          <member value='48203' />
          <member value='48207' />
          <member value='48208' />
          <member value='48209' />
          <member value='48214' />
          <member value='48216' />
          <member value='48220' />
          <member value='48221' />
          <member value='48226' />
          <member value='48228' />
          <member value='48237' />
          <member value='49015' />
          <member value='49017' />
          <member value='49203' />
          <member value='50265' />
          <member value='50309' />
          <member value='50311' />
          <member value='50312' />
          <member value='50314' />
          <member value='50315' />
          <member value='50316' />
          <member value='50319' />
          <member value='50320' />
          <member value='50321' />
          <member value='50324' />
          <member value='50325' />
          <member value='51501' />
          <member value='51503' />
          <member value='53202' />
          <member value='53203' />
          <member value='53204' />
          <member value='53205' />
          <member value='53207' />
          <member value='53208' />
          <member value='53211' />
          <member value='53212' />
          <member value='53213' />
          <member value='53214' />
          <member value='53215' />
          <member value='53217' />
          <member value='53226' />
          <member value='53233' />
          <member value='53558' />
          <member value='53703' />
          <member value='53704' />
          <member value='53705' />
          <member value='53706' />
          <member value='53711' />
          <member value='53713' />
          <member value='53714' />
          <member value='53715' />
          <member value='53716' />
          <member value='53719' />
          <member value='53726' />
          <member value='54545' />
          <member value='54880' />
          <member value='55033' />
          <member value='55101' />
          <member value='55102' />
          <member value='55103' />
          <member value='55104' />
          <member value='55105' />
          <member value='55107' />
          <member value='55108' />
          <member value='55112' />
          <member value='55114' />
          <member value='55116' />
          <member value='55155' />
          <member value='55401' />
          <member value='55402' />
          <member value='55403' />
          <member value='55404' />
          <member value='55405' />
          <member value='55406' />
          <member value='55407' />
          <member value='55408' />
          <member value='55409' />
          <member value='55410' />
          <member value='55411' />
          <member value='55412' />
          <member value='55413' />
          <member value='55414' />
          <member value='55415' />
          <member value='55416' />
          <member value='55417' />
          <member value='55418' />
          <member value='55419' />
          <member value='55422' />
          <member value='55430' />
          <member value='55446' />
          <member value='55454' />
          <member value='55455' />
          <member value='57701' />
          <member value='58102' />
          <member value='58103' />
          <member value='58105' />
          <member value='58501' />
          <member value='58503' />
          <member value='58504' />
          <member value='60201' />
          <member value='60202' />
          <member value='60208' />
          <member value='60301' />
          <member value='60302' />
          <member value='60304' />
          <member value='60459' />
          <member value='60505' />
          <member value='60506' />
          <member value='60601' />
          <member value='60602' />
          <member value='60603' />
          <member value='60604' />
          <member value='60605' />
          <member value='60606' />
          <member value='60607' />
          <member value='60608' />
          <member value='60609' />
          <member value='60610' />
          <member value='60611' />
          <member value='60612' />
          <member value='60613' />
          <member value='60614' />
          <member value='60615' />
          <member value='60616' />
          <member value='60617' />
          <member value='60618' />
          <member value='60619' />
          <member value='60620' />
          <member value='60621' />
          <member value='60622' />
          <member value='60623' />
          <member value='60624' />
          <member value='60625' />
          <member value='60626' />
          <member value='60628' />
          <member value='60629' />
          <member value='60630' />
          <member value='60631' />
          <member value='60632' />
          <member value='60633' />
          <member value='60634' />
          <member value='60636' />
          <member value='60637' />
          <member value='60638' />
          <member value='60639' />
          <member value='60640' />
          <member value='60641' />
          <member value='60642' />
          <member value='60643' />
          <member value='60644' />
          <member value='60645' />
          <member value='60646' />
          <member value='60647' />
          <member value='60649' />
          <member value='60651' />
          <member value='60652' />
          <member value='60653' />
          <member value='60654' />
          <member value='60655' />
          <member value='60656' />
          <member value='60657' />
          <member value='60659' />
          <member value='60660' />
          <member value='60661' />
          <member value='60707' />
          <member value='60712' />
          <member value='60805' />
          <member value='60827' />
          <member value='61602' />
          <member value='61603' />
          <member value='61606' />
          <member value='61611' />
          <member value='61614' />
          <member value='61616' />
          <member value='61701' />
          <member value='61761' />
          <member value='64105' />
          <member value='64106' />
          <member value='64108' />
          <member value='64109' />
          <member value='64110' />
          <member value='64111' />
          <member value='64112' />
          <member value='64113' />
          <member value='64114' />
          <member value='64116' />
          <member value='64131' />
          <member value='64152' />
          <member value='66603' />
          <member value='66604' />
          <member value='66605' />
          <member value='66606' />
          <member value='66607' />
          <member value='66608' />
          <member value='66609' />
          <member value='66610' />
          <member value='66611' />
          <member value='66612' />
          <member value='66614' />
          <member value='66615' />
          <member value='66616' />
          <member value='66618' />
          <member value='66621' />
          <member value='66622' />
          <member value='66636' />
          <member value='66901' />
          <member value='66935' />
          <member value='66956' />
          <member value='67202' />
          <member value='67203' />
          <member value='67205' />
          <member value='67208' />
          <member value='67211' />
          <member value='67212' />
          <member value='67213' />
          <member value='67214' />
          <member value='67217' />
          <member value='67220' />
          <member value='67226' />
          <member value='67260' />
          <member value='67401' />
          <member value='67420' />
          <member value='67439' />
          <member value='67455' />
          <member value='67467' />
          <member value='68003' />
          <member value='68046' />
          <member value='68102' />
          <member value='68104' />
          <member value='68105' />
          <member value='68106' />
          <member value='68107' />
          <member value='68108' />
          <member value='68110' />
          <member value='68111' />
          <member value='68114' />
          <member value='68123' />
          <member value='68127' />
          <member value='68131' />
          <member value='68132' />
          <member value='68138' />
          <member value='68179' />
          <member value='68180' />
          <member value='68182' />
          <member value='68183' />
          <member value='68198' />
          <member value='68503' />
          <member value='68508' />
          <member value='68510' />
          <member value='68583' />
          <member value='68588' />
          <member value='69210' />
          <member value='70112' />
          <member value='70113' />
          <member value='70115' />
          <member value='70116' />
          <member value='70117' />
          <member value='70119' />
          <member value='70123' />
          <member value='70124' />
          <member value='70130' />
          <member value='70801' />
          <member value='70802' />
          <member value='70803' />
          <member value='70806' />
          <member value='70807' />
          <member value='70808' />
          <member value='70813' />
          <member value='72301' />
          <member value='72364' />
          <member value='73102' />
          <member value='73103' />
          <member value='73104' />
          <member value='74012' />
          <member value='74037' />
          <member value='74103' />
          <member value='74104' />
          <member value='74105' />
          <member value='74106' />
          <member value='74107' />
          <member value='74112' />
          <member value='74114' />
          <member value='74119' />
          <member value='74120' />
          <member value='74127' />
          <member value='74137' />
          <member value='74170' />
          <member value='75210' />
          <member value='75226' />
          <member value='76102' />
          <member value='76103' />
          <member value='76104' />
          <member value='76105' />
          <member value='76106' />
          <member value='76107' />
          <member value='76109' />
          <member value='76110' />
          <member value='76111' />
          <member value='76116' />
          <member value='76118' />
          <member value='76133' />
          <member value='76164' />
          <member value='76179' />
          <member value='76196' />
          <member value='77002' />
          <member value='77003' />
          <member value='77004' />
          <member value='77005' />
          <member value='77006' />
          <member value='77007' />
          <member value='77008' />
          <member value='77009' />
          <member value='77010' />
          <member value='77011' />
          <member value='77019' />
          <member value='77020' />
          <member value='77021' />
          <member value='77023' />
          <member value='77024' />
          <member value='77025' />
          <member value='77026' />
          <member value='77029' />
          <member value='77030' />
          <member value='77044' />
          <member value='77054' />
          <member value='77056' />
          <member value='77096' />
          <member value='77098' />
          <member value='77204' />
          <member value='77840' />
          <member value='78202' />
          <member value='78204' />
          <member value='78205' />
          <member value='78207' />
          <member value='78209' />
          <member value='78210' />
          <member value='78212' />
          <member value='78214' />
          <member value='78215' />
          <member value='78223' />
          <member value='78235' />
          <member value='78401' />
          <member value='78501' />
          <member value='78520' />
          <member value='78526' />
          <member value='78550' />
          <member value='78701' />
          <member value='78702' />
          <member value='78703' />
          <member value='78704' />
          <member value='78705' />
          <member value='78712' />
          <member value='78741' />
          <member value='78746' />
          <member value='78758' />
          <member value='79901' />
          <member value='79902' />
          <member value='79905' />
          <member value='79912' />
          <member value='79928' />
          <member value='80000' />
          <member value='80013' />
          <member value='80020' />
          <member value='80021' />
          <member value='80023' />
          <member value='80030' />
          <member value='80202' />
          <member value='80203' />
          <member value='80204' />
          <member value='80205' />
          <member value='80206' />
          <member value='80209' />
          <member value='80210' />
          <member value='80211' />
          <member value='80216' />
          <member value='80218' />
          <member value='80223' />
          <member value='80301' />
          <member value='80302' />
          <member value='80303' />
          <member value='80304' />
          <member value='80305' />
          <member value='80309' />
          <member value='80310' />
          <member value='80424' />
          <member value='80501' />
          <member value='80503' />
          <member value='80504' />
          <member value='80521' />
          <member value='80523' />
          <member value='80524' />
          <member value='80525' />
          <member value='80526' />
          <member value='81611' />
          <member value='81615' />
          <member value='81621' />
          <member value='81623' />
          <member value='83001' />
          <member value='83014' />
          <member value='83313' />
          <member value='83333' />
          <member value='83340' />
          <member value='83353' />
          <member value='83702' />
          <member value='83705' />
          <member value='83706' />
          <member value='83712' />
          <member value='83714' />
          <member value='83716' />
          <member value='83725' />
          <member value='84017' />
          <member value='84060' />
          <member value='84098' />
          <member value='84101' />
          <member value='84102' />
          <member value='84103' />
          <member value='84104' />
          <member value='84105' />
          <member value='84106' />
          <member value='84111' />
          <member value='84115' />
          <member value='84116' />
          <member value='84190' />
          <member value='84401' />
          <member value='85003' />
          <member value='85004' />
          <member value='85006' />
          <member value='85007' />
          <member value='85012' />
          <member value='85013' />
          <member value='85034' />
          <member value='85040' />
          <member value='85041' />
          <member value='85201' />
          <member value='85203' />
          <member value='85204' />
          <member value='85210' />
          <member value='85253' />
          <member value='85281' />
          <member value='85282' />
          <member value='85283' />
          <member value='85287' />
          <member value='85288' />
          <member value='85701' />
          <member value='85705' />
          <member value='85713' />
          <member value='85716' />
          <member value='85718' />
          <member value='85719' />
          <member value='85745' />
          <member value='87102' />
          <member value='87104' />
          <member value='87124' />
          <member value='89101' />
          <member value='89102' />
          <member value='89104' />
          <member value='89106' />
          <member value='89169' />
          <member value='90004' />
          <member value='90005' />
          <member value='90006' />
          <member value='90007' />
          <member value='90010' />
          <member value='90012' />
          <member value='90013' />
          <member value='90014' />
          <member value='90015' />
          <member value='90017' />
          <member value='90018' />
          <member value='90020' />
          <member value='90021' />
          <member value='90024' />
          <member value='90025' />
          <member value='90026' />
          <member value='90027' />
          <member value='90028' />
          <member value='90029' />
          <member value='90033' />
          <member value='90034' />
          <member value='90036' />
          <member value='90037' />
          <member value='90038' />
          <member value='90039' />
          <member value='90046' />
          <member value='90048' />
          <member value='90057' />
          <member value='90064' />
          <member value='90066' />
          <member value='90069' />
          <member value='90071' />
          <member value='90094' />
          <member value='90095' />
          <member value='90210' />
          <member value='90211' />
          <member value='90212' />
          <member value='90230' />
          <member value='90232' />
          <member value='90291' />
          <member value='90292' />
          <member value='90293' />
          <member value='90401' />
          <member value='90402' />
          <member value='90403' />
          <member value='90404' />
          <member value='90405' />
          <member value='90731' />
          <member value='90744' />
          <member value='90802' />
          <member value='90803' />
          <member value='90804' />
          <member value='90805' />
          <member value='90806' />
          <member value='90807' />
          <member value='90808' />
          <member value='90810' />
          <member value='90813' />
          <member value='90814' />
          <member value='90815' />
          <member value='90831' />
          <member value='91040' />
          <member value='91101' />
          <member value='91103' />
          <member value='91104' />
          <member value='91105' />
          <member value='91106' />
          <member value='91601' />
          <member value='91602' />
          <member value='91604' />
          <member value='91606' />
          <member value='91607' />
          <member value='92007' />
          <member value='92024' />
          <member value='92101' />
          <member value='92102' />
          <member value='92103' />
          <member value='92104' />
          <member value='92106' />
          <member value='92107' />
          <member value='92109' />
          <member value='92110' />
          <member value='92113' />
          <member value='92118' />
          <member value='92128' />
          <member value='93101' />
          <member value='93103' />
          <member value='93105' />
          <member value='93108' />
          <member value='93109' />
          <member value='93514' />
          <member value='94040' />
          <member value='94041' />
          <member value='94063' />
          <member value='94102' />
          <member value='94103' />
          <member value='94104' />
          <member value='94105' />
          <member value='94107' />
          <member value='94108' />
          <member value='94109' />
          <member value='94110' />
          <member value='94111' />
          <member value='94112' />
          <member value='94114' />
          <member value='94115' />
          <member value='94116' />
          <member value='94117' />
          <member value='94118' />
          <member value='94121' />
          <member value='94122' />
          <member value='94123' />
          <member value='94124' />
          <member value='94127' />
          <member value='94129' />
          <member value='94131' />
          <member value='94132' />
          <member value='94133' />
          <member value='94134' />
          <member value='94158' />
          <member value='94199' />
          <member value='94301' />
          <member value='94306' />
          <member value='94401' />
          <member value='94402' />
          <member value='94403' />
          <member value='94583' />
          <member value='94601' />
          <member value='94606' />
          <member value='94607' />
          <member value='94608' />
          <member value='94609' />
          <member value='94610' />
          <member value='94611' />
          <member value='94612' />
          <member value='94618' />
          <member value='94702' />
          <member value='94703' />
          <member value='94704' />
          <member value='94705' />
          <member value='94709' />
          <member value='94710' />
          <member value='94801' />
          <member value='94804' />
          <member value='94805' />
          <member value='95010' />
          <member value='95060' />
          <member value='95062' />
          <member value='95064' />
          <member value='95065' />
          <member value='95110' />
          <member value='95112' />
          <member value='95113' />
          <member value='95116' />
          <member value='95125' />
          <member value='95126' />
          <member value='95131' />
          <member value='95133' />
          <member value='95136' />
          <member value='96001' />
          <member value='96161' />
          <member value='96813' />
          <member value='96814' />
          <member value='96815' />
          <member value='96816' />
          <member value='96817' />
          <member value='96822' />
          <member value='96826' />
          <member value='97201' />
          <member value='97202' />
          <member value='97203' />
          <member value='97204' />
          <member value='97205' />
          <member value='97206' />
          <member value='97209' />
          <member value='97210' />
          <member value='97211' />
          <member value='97212' />
          <member value='97213' />
          <member value='97214' />
          <member value='97215' />
          <member value='97216' />
          <member value='97217' />
          <member value='97218' />
          <member value='97220' />
          <member value='97227' />
          <member value='97230' />
          <member value='97232' />
          <member value='97233' />
          <member value='97236' />
          <member value='97239' />
          <member value='97266' />
          <member value='97330' />
          <member value='97331' />
          <member value='97333' />
          <member value='97401' />
          <member value='97402' />
          <member value='97403' />
          <member value='97405' />
          <member value='97477' />
          <member value='97501' />
          <member value='97503' />
          <member value='97504' />
          <member value='97520' />
          <member value='98101' />
          <member value='98102' />
          <member value='98104' />
          <member value='98105' />
          <member value='98109' />
          <member value='98112' />
          <member value='98121' />
          <member value='98122' />
          <member value='98195' />
        </members>
      </column>
      <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
        <calculation class='tableau' formula='&quot;(All)&quot;' />
        <aliases>
          <alias key='&quot;NB*&quot;' value='NB' />
        </aliases>
        <members>
          <member value='&quot;(All)&quot;' />
          <member value='&quot;AL&quot;' />
          <member value='&quot;AR&quot;' />
          <member value='&quot;AZ&quot;' />
          <member value='&quot;CA&quot;' />
          <member value='&quot;CO&quot;' />
          <member value='&quot;CT&quot;' />
          <member value='&quot;DC&quot;' />
          <member value='&quot;FL&quot;' />
          <member value='&quot;GA&quot;' />
          <member value='&quot;HI&quot;' />
          <member value='&quot;IA&quot;' />
          <member value='&quot;ID&quot;' />
          <member value='&quot;IL&quot;' />
          <member value='&quot;IN&quot;' />
          <member value='&quot;KS&quot;' />
          <member value='&quot;KY&quot;' />
          <member value='&quot;LA&quot;' />
          <member value='&quot;MA&quot;' />
          <member value='&quot;MD&quot;' />
          <member value='&quot;MI&quot;' />
          <member value='&quot;MN&quot;' />
          <member value='&quot;MO&quot;' />
          <member alias='NB' value='&quot;NB*&quot;' />
          <member value='&quot;NC&quot;' />
          <member value='&quot;ND&quot;' />
          <member value='&quot;NE&quot;' />
          <member value='&quot;NH&quot;' />
          <member value='&quot;NJ&quot;' />
          <member value='&quot;NM&quot;' />
          <member value='&quot;NV&quot;' />
          <member value='&quot;NY&quot;' />
          <member value='&quot;OH&quot;' />
          <member value='&quot;OK&quot;' />
          <member value='&quot;OR&quot;' />
          <member value='&quot;PA&quot;' />
          <member value='&quot;SC&quot;' />
          <member value='&quot;SD&quot;' />
          <member value='&quot;TN&quot;' />
          <member value='&quot;TX&quot;' />
          <member value='&quot;UT&quot;' />
          <member value='&quot;VA&quot;' />
          <member value='&quot;VT&quot;' />
          <member value='&quot;WA&quot;' />
          <member value='&quot;WI&quot;' />
          <member value='&quot;WY&quot;' />
        </members>
      </column>
      <column caption='Select CBSA Code' datatype='integer' default-format='*' name='[Parameter 5]' param-domain-type='list' role='measure' type='quantitative' value='10580'>
        <calculation class='tableau' formula='10580' />
        <members>
          <member value='10580' />
          <member value='10740' />
          <member value='11200' />
          <member value='11460' />
          <member value='12060' />
          <member value='12260' />
          <member value='12420' />
          <member value='12580' />
          <member value='12940' />
          <member value='12980' />
          <member value='13820' />
          <member value='13860' />
          <member value='13900' />
          <member value='13980' />
          <member value='14010' />
          <member value='14260' />
          <member value='14460' />
          <member value='14500' />
          <member value='14720' />
          <member value='15180' />
          <member value='15380' />
          <member value='15540' />
          <member value='16700' />
          <member value='16740' />
          <member value='16860' />
          <member value='16980' />
          <member value='17140' />
          <member value='17410' />
          <member value='18020' />
          <member value='18140' />
          <member value='18580' />
          <member value='18700' />
          <member value='19100' />
          <member value='19260' />
          <member value='19430' />
          <member value='19740' />
          <member value='19780' />
          <member value='19820' />
          <member value='20260' />
          <member value='20780' />
          <member value='21340' />
          <member value='21660' />
          <member value='22020' />
          <member value='22660' />
          <member value='23060' />
          <member value='23540' />
          <member value='24860' />
          <member value='25200' />
          <member value='25420' />
          <member value='25720' />
          <member value='26420' />
          <member value='26620' />
          <member value='26900' />
          <member value='27100' />
          <member value='27220' />
          <member value='27260' />
          <member value='27540' />
          <member value='28140' />
          <member value='28580' />
          <member value='29460' />
          <member value='29820' />
          <member value='30700' />
          <member value='31080' />
          <member value='31140' />
          <member value='31540' />
          <member value='31700' />
          <member value='32580' />
          <member value='32740' />
          <member value='32780' />
          <member value='32820' />
          <member value='33100' />
          <member value='33340' />
          <member value='33460' />
          <member value='34980' />
          <member value='35300' />
          <member value='35380' />
          <member value='35620' />
          <member value='36260' />
          <member value='36420' />
          <member value='36540' />
          <member value='36740' />
          <member value='37900' />
          <member value='37980' />
          <member value='38060' />
          <member value='38300' />
          <member value='38900' />
          <member value='38940' />
          <member value='39580' />
          <member value='39660' />
          <member value='39820' />
          <member value='40060' />
          <member value='40090' />
          <member value='40220' />
          <member value='41460' />
          <member value='41620' />
          <member value='41700' />
          <member value='41740' />
          <member value='41860' />
          <member value='41940' />
          <member value='42100' />
          <member value='42200' />
          <member value='42340' />
          <member value='42660' />
          <member value='43900' />
          <member value='44140' />
          <member value='45300' />
          <member value='45780' />
          <member value='45820' />
          <member value='46020' />
          <member value='46060' />
          <member value='46140' />
          <member value='46520' />
          <member value='47900' />
          <member value='48620' />
          <member value='49180' />
        </members>
      </column>
    </datasource>
    <datasource caption='cleaned_bikeshare_stations' inline='true' name='federated.01lywv000c3tud1d7mmhw1czv3dz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cleaned_bikeshare_stations' name='textscan.00x0nl51ega1vy15j2kz51ud1pj7'>
            <connection class='textscan' directory='C:/Users/andre/Desktop/Bikeshare Station Project' filename='cleaned_bikeshare_stations.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.00x0nl51ega1vy15j2kz51ud1pj7' name='cleaned_bikeshare_stations.csv' table='[cleaned_bikeshare_stations#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='the_geom' ordinal='0' />
            <column datatype='real' name='ID' ordinal='1' />
            <column datatype='string' name='FAC_ID' ordinal='2' />
            <column datatype='string' name='BIKE_ID' ordinal='3' />
            <column datatype='integer' name='SYSTEM_ID' ordinal='4' />
            <column datatype='string' name='SYSTEM_NAME' ordinal='5' />
            <column datatype='date' date-parse-format='yyyy' name='YEAR' ordinal='6' />
            <column datatype='integer' name='ASOFDATE' ordinal='7' />
            <column datatype='string' name='FAC_NAME' ordinal='8' />
            <column datatype='string' name='ADDRESS' ordinal='9' />
            <column datatype='string' name='CITY' ordinal='10' />
            <column datatype='string' name='STATE' ordinal='11' />
            <column datatype='integer' name='ZIPCODE' ordinal='12' />
            <column datatype='integer' name='CBSA_CODE' ordinal='13' />
            <column datatype='real' name='LONGITUDE' ordinal='14' />
            <column datatype='real' name='LATITUDE' ordinal='15' />
            <column datatype='string' name='STATION_TYPE' ordinal='16' />
            <column datatype='date' date-parse-format='MMM-yyyy' name='launchDate' ordinal='17' />
            <column datatype='date' date-parse-format='MMM-yyyy|#|#|yyyy' name='endDate' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>the_geom</remote-name>
            <remote-type>129</remote-type>
            <local-name>[the_geom]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>the_geom</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAC_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FAC_ID]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>FAC_ID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BIKE_ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BIKE_ID]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>BIKE_ID</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SYSTEM_ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SYSTEM_ID]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>SYSTEM_ID</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SYSTEM_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SYSTEM_NAME]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>SYSTEM_NAME</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>7</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ASOFDATE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ASOFDATE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>ASOFDATE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FAC_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FAC_NAME]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>FAC_NAME</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>ADDRESS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIPCODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIPCODE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>ZIPCODE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CBSA_CODE</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CBSA_CODE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>CBSA_CODE</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATION_TYPE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATION_TYPE]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>STATION_TYPE</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>launchDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[launchDate]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>launchDate</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>endDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[endDate]</local-name>
            <parent-name>[cleaned_bikeshare_stations.csv]</parent-name>
            <remote-alias>endDate</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]&quot;' value='Total' />
        </aliases>
      </column>
      <column caption='Address' datatype='string' name='[ADDRESS]' role='dimension' type='nominal' />
      <column caption='Asofdate' datatype='integer' name='[ASOFDATE]' role='measure' type='quantitative' />
      <column caption='Bike Id' datatype='string' name='[BIKE_ID]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Cbsa Code' datatype='integer' name='[CBSA_CODE]' role='dimension' semantic-role='[CMSA].[Name]' type='ordinal' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Filtered Cities' datatype='string' name='[Calculation_1165587931033247745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [STATE] = [Parameters].[Parameter 4] THEN [CITY] END' />
      </column>
      <column caption='All State Filter' datatype='boolean' name='[Calculation_1165587931067629571]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
      </column>
      <column caption='Calculation1' datatype='boolean' name='[Calculation_1165587931112943623]' role='measure' type='nominal'>
        <calculation class='tableau' formula='first()=0'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
      </column>
      <column caption='Display City' datatype='boolean' name='[Calculation_2287547187946008577]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[CITY] = [Parameters].[Parameter 2]' />
      </column>
      <column caption='Display Zipcode' datatype='integer' name='[Calculation_2287547187946823682]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 3]' />
      </column>
      <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
      </column>
      <column caption='Display CBSA Code' datatype='integer' name='[Calculation_2287547187971489796]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[CBSA_CODE]' />
      </column>
      <column caption='Fac Id' datatype='string' name='[FAC_ID]' role='dimension' type='nominal' />
      <column caption='Fac Name' datatype='string' name='[FAC_NAME]' role='dimension' type='nominal' />
      <column datatype='real' name='[ID]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <aliases>
          <alias key='&quot;NB*&quot;' value='NB' />
        </aliases>
      </column>
      <column caption='Station Type' datatype='string' name='[STATION_TYPE]' role='dimension' type='nominal' />
      <column caption='System Id' datatype='integer' name='[SYSTEM_ID]' role='dimension' type='ordinal' />
      <column caption='Company Name' datatype='string' name='[SYSTEM_NAME]' role='dimension' type='nominal' />
      <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
      <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='33589' value='27.699999999999999' />
          <semantic-value key='80000' value='39.75' />
          <semantic-value key='85288' value='33.43' />
          <semantic-value key='94199' value='37.770000000000003' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='33589' value='-82.299999999999997' />
          <semantic-value key='80000' value='-104.98999999999999' />
          <semantic-value key='85288' value='-111.91' />
          <semantic-value key='94199' value='-122.41' />
        </semantic-values>
      </column>
      <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
      <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Launch Date' datatype='date' datatype-customized='true' name='[launchDate]' role='dimension' type='ordinal' />
      <column caption='The Geom' datatype='string' name='[the_geom]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2287547187946008577]' derivation='None' name='[none:Calculation_2287547187946008577:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <column-instance column='[SYSTEM_NAME]' derivation='None' name='[none:SYSTEM_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[YEAR]' derivation='Quarter-Trunc' name='[tqr:YEAR:ok]' pivot='key' type='ordinal' />
      <column-instance column='[YEAR]' derivation='Year-Trunc' name='[tyr:YEAR:ok]' pivot='key' type='ordinal' />
      <group caption='Action (City,YEAR(Year))' hidden='true' name='[Action (City,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[CITY]' />
          <groupfilter function='level-members' level='[tyr:YEAR:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
        </groupfilter>
      </group>
      <group caption='Action (State,QUARTER(Year))' hidden='true' name='[Action (State,QUARTER(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
          <groupfilter function='level-members' level='[tqr:YEAR:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State,YEAR(Year))' hidden='true' name='[Action (State,YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[STATE]' />
          <groupfilter function='level-members' level='[tyr:YEAR:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (System Name)' hidden='true' name='[Action (System Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[SYSTEM_NAME]' />
        </groupfilter>
      </group>
      <group caption='Action (System Name,Zipcode)' hidden='true' name='[Action (System Name,Zipcode)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[SYSTEM_NAME]' />
          <groupfilter function='level-members' level='[ZIPCODE]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Calculated Fields'>
          <folder-item name='[Calculation_1165587931033247745]' type='field' />
          <folder-item name='[Calculation_1165587931067629571]' type='field' />
          <folder-item name='[Calculation_2287547187932200960]' type='field' />
          <folder-item name='[Calculation_2287547187946008577]' type='field' />
          <folder-item name='[Calculation_2287547187946823682]' type='field' />
          <folder-item name='[Calculation_2287547187950948355]' type='field' />
          <folder-item name='[Calculation_2287547187971489796]' type='field' />
        </folder>
        <folder name='Locations'>
          <folder-item name='[CBSA_CODE]' type='field' />
          <folder-item name='[CITY]' type='field' />
          <folder-item name='[LATITUDE]' type='field' />
          <folder-item name='[LONGITUDE]' type='field' />
          <folder-item name='[STATE]' type='field' />
          <folder-item name='[ZIPCODE]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/andre/AppData/Local/Temp/TableauTemp/#TableauTemp_1p5y89b18phex11avx42j0n5aw24.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/01/2025 02:09:35 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>the_geom</remote-name>
              <remote-type>129</remote-type>
              <local-name>[the_geom]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>the_geom</remote-alias>
              <ordinal>0</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10903</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ID</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ID</remote-alias>
              <ordinal>1</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10903</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FAC_ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FAC_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FAC_ID</remote-alias>
              <ordinal>2</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10903</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BIKE_ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[BIKE_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BIKE_ID</remote-alias>
              <ordinal>3</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3732</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SYSTEM_ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SYSTEM_ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SYSTEM_ID</remote-alias>
              <ordinal>4</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>147</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SYSTEM_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[SYSTEM_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SYSTEM_NAME</remote-alias>
              <ordinal>5</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>150</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>YEAR</remote-name>
              <remote-type>133</remote-type>
              <local-name>[YEAR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>YEAR</remote-alias>
              <ordinal>6</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ASOFDATE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ASOFDATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ASOFDATE</remote-alias>
              <ordinal>7</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FAC_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FAC_NAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>FAC_NAME</remote-alias>
              <ordinal>8</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7085</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRESS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRESS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRESS</remote-alias>
              <ordinal>9</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5853</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CITY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[CITY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CITY</remote-alias>
              <ordinal>10</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>309</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE</remote-alias>
              <ordinal>11</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIPCODE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZIPCODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIPCODE</remote-alias>
              <ordinal>12</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1279</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CBSA_CODE</remote-name>
              <remote-type>20</remote-type>
              <local-name>[CBSA_CODE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CBSA_CODE</remote-alias>
              <ordinal>13</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>118</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>14</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10903</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>15</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10460</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATION_TYPE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATION_TYPE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATION_TYPE</remote-alias>
              <ordinal>16</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>launchDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[launchDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>launchDate</remote-alias>
              <ordinal>17</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>endDate</remote-name>
              <remote-type>133</remote-type>
              <local-name>[endDate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>endDate</remote-alias>
              <ordinal>18</ordinal>
              <family>cleaned_bikeshare_stations.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>40</approx-count>
              <contains-null>true</contains-null>
              <object-id>[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.82854' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.17146' show-structure='false' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2287547187946008577:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>false</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:SYSTEM_NAME:nk]' palette='tableau-20' type='palette'>
            <map to='#1ba3c6'>
              <bucket>&quot;Bay Area BikeShare (became Ford GoBike 06/28/2017 then became Bay Wheels 06/2019)&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Boulder B-cycle&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Relay Bike Share&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beverly Hills Bikeshare&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charlotte B-cycle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Domain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hawaii Bikibike&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madison B-cycle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;River&apos;s Edge B-cycle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;ToleGo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;arborbike (was to be relaunched 2020 but status unclear as of 08/2020)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Broward B-cycle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Comporium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gotcha - Richmond CA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jackson County (RECREATION ONLY)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Normal (Bikeshare 309)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spartanburg B-cycle&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Winston-Salem&quot;</bucket>
            </map>
            <map to='#4f7cba'>
              <bucket>&quot;DiscoverBike (was DecoBike in 2016 and 2017)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baltimore Bikeshare&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carmel Bike Share&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greenride&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Link Dayton B-cycle (relaunched 06/2020; stations for 2020 are those prior to re-launch)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rapid City B-cycle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Summit Bike Share&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zagstar Jackson County&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;BikeLNK&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Citrix Bikeshare&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eugene (JUMP, operator of Eugene bikeshare, acquired by LIME 06/2020)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Houston B-cycle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Metro Bike Share Los Angeles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RVA Bike Share&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;tugo&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bici (became PACE dockless in 2018)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cincy RedBike Bike&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eastside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Healthy Ride&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;ROAM NRV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Topeka Metro Bikes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Battle Creek B-cycle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines B-cycle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greenville B-cycle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Long Beach, CA Bikeshare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Redding Bikeshare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zyp BikeShare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbia County B-cycle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indiana Pacers Bikeshare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Orleans Bikeshare&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna Bike Share&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bublr Bikes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gotcha - St Augustine FL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Juice&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokies&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zagstar Cleveland&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Breckenridge&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Denver B-cycle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;COGO&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huntsville (became PACE, hybrid dockless, in 2018)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MR Bike Share&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa Cruz B-cycle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CAT B-cycle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grid&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Reddy Bikes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Swan City Cycle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;BikeTown Portland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;City of Danville, VA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Explore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Howard County Bikeshare&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mo Go&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UH Bikes&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Breeze&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;BisParks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;City of Marlborough, MA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fairpark B-cycle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hubway (03/2018 re-launched as Blue Bikes)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montgomery Parks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio B-cycle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valentine Bikeshare&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;College Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Worth B-cycle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Inde&apos;go&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nashville B-cycle&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sky Bike WPB&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;WeHo Pedals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;columBike&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gotcha - Baton Rouge LA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Instabike&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nice Ride Minnesota (became partially dockless in 2018)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sobi Long Beach, NY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bike Chattanooga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Citi Bike&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;El Paso B-cycle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Heartland B-cycle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;McAllen B-cycle&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Townies&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bay Bikes (became DOCKLESS Lime Bikes in 2018)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CDPHP&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Divvy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lou Velo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;This Machine Tulsa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Austin B-cycle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Capital Bikeshare&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corvallis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Great Rides&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KANcycle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Lucie County&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zagstar Hastings&quot;</bucket>
            </map>
            <map to='#f43c63'>
              <bucket>&quot;BriteBikes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boise Green Bike&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Coast Bike Share&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Collins Bike Share (became PACE dockless in 2018)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hudson Bike Share&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morris Moves&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa Barbara Bcycle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;ValleyBike&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;WE-cycle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bike New Haven&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Citi Bike Miami&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Encinitas BCycle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Holy Spokes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meadville/Lake Wilhelm Bikeshare&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RTC Bikeshare&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Truckee B-cycle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aventura&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cardinal Bikeshare&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;GreenBikes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kansas City B-cycle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pronto&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;START&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zagstar Huntingburg&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:CITY:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Beverly Hills&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jackson Heights&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Snowmass Village&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alamo Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bay Harbor Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brighton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Snelling&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Huntingburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peoria Heights&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Riverdale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Monica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sun Valley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venice&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allston&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Beloit&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Daly City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emeryville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hyattsville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Kansas City&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Playa del Rey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roslindale&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Takoma Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Auburndale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blacksburg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cardiff by the Sea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colonie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falls Church&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mountain View&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Euclid&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clive&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guttenberg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica Plain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Manitowish Waters&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monona&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somerville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Toluca Lake&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Des Moines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amherst&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brooks AFB&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chicopee&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dania Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hyde Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Miami Beach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northampton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Playa Vista&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roxbury&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shorewood&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Watervliet&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Breckenridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlestown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Corvallis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Easthampton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Myer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lauderdale by the Sea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;McLean&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Newton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Valentine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;White City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Culver City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ellicott City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Huntington Woods&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bergen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saratoga Springs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunnyside&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vienna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Windsor Heights&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Celebration&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Corona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Elmhurst&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McAllen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papillion&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Pedro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;University Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Berkley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Christiansburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Middle Village&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Silver Spring&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wauwatosa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Carmel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dorchester&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oxon Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Hadley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Truckee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dunn Loring&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ferndale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hastings&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ketchum&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maspeth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palm Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Salt Lake&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Roxbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Basalt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boyds&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;East Peoria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;McFarland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Ramon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Upper Marlboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Battle Creek&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Council Bluffs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Jebel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Pierce&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Meadville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ridgewood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Santa Cruz&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Studio City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valley Village&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Astoria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Capitol Heights&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cohoes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hailey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeffersonville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mankato&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Boston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonawanda&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;West Hollywood&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bethesda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenbelt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Temple Hills&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Weehawken&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chestnut Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curtis Bay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ellsworth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Menands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Bethesda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vinton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Winooski&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aventura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concordia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Boston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fitchburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hoboken&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mattapan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rego Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spartanburg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Springfield&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bismarck&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Capitola&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Park&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falcon Heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hallandale Beach&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jenks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marina del Rey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mount Rainier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Burlington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Topeka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Memphis&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brookline&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chevy Chase&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hutchinson Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Hollywood&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Schenectady&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Surfside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Winston-Salem&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:STATE:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;*to NE in 1969&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;NM&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;ND&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;WY&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MN&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;HI&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;NH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NB*&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
          <calculation class='tableau' formula='#2015-01-01#' />
          <aliases>
            <alias key='#2015-01-01#' value='2015' />
            <alias key='#2016-01-01#' value='2016' />
            <alias key='#2017-01-01#' value='2017' />
            <alias key='#2018-01-01#' value='2018' />
            <alias key='#2019-01-01#' value='2019' />
            <alias key='#2020-01-01#' value='2020' />
            <alias key='#2021-01-01#' value='2021' />
            <alias key='#2022-01-01#' value='2022' />
            <alias key='#2023-01-01#' value='2023' />
            <alias key='#2024-01-01#' value='2024' />
          </aliases>
        </column>
        <column caption='Select City' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;Alamo Heights&quot;'>
          <calculation class='tableau' formula='&quot;Alamo Heights&quot;' />
        </column>
        <column caption='Select Zipcode' datatype='integer' default-format='*#####' name='[Parameter 3]' param-domain-type='list' role='measure' type='quantitative' value='1002'>
          <calculation class='tableau' formula='1002' />
        </column>
        <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
          <aliases>
            <alias key='&quot;NB*&quot;' value='NB' />
          </aliases>
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='cleaned_bikeshare_stations.csv' id='cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516'>
            <properties context=''>
              <relation connection='textscan.00x0nl51ega1vy15j2kz51ud1pj7' name='cleaned_bikeshare_stations.csv' table='[cleaned_bikeshare_stations#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='the_geom' ordinal='0' />
                  <column datatype='real' name='ID' ordinal='1' />
                  <column datatype='string' name='FAC_ID' ordinal='2' />
                  <column datatype='string' name='BIKE_ID' ordinal='3' />
                  <column datatype='integer' name='SYSTEM_ID' ordinal='4' />
                  <column datatype='string' name='SYSTEM_NAME' ordinal='5' />
                  <column datatype='date' date-parse-format='yyyy' name='YEAR' ordinal='6' />
                  <column datatype='integer' name='ASOFDATE' ordinal='7' />
                  <column datatype='string' name='FAC_NAME' ordinal='8' />
                  <column datatype='string' name='ADDRESS' ordinal='9' />
                  <column datatype='string' name='CITY' ordinal='10' />
                  <column datatype='string' name='STATE' ordinal='11' />
                  <column datatype='integer' name='ZIPCODE' ordinal='12' />
                  <column datatype='integer' name='CBSA_CODE' ordinal='13' />
                  <column datatype='real' name='LONGITUDE' ordinal='14' />
                  <column datatype='real' name='LATITUDE' ordinal='15' />
                  <column datatype='string' name='STATION_TYPE' ordinal='16' />
                  <column datatype='date' date-parse-format='MMM-yyyy' name='launchDate' ordinal='17' />
                  <column datatype='date' date-parse-format='MMM-yyyy|#|#|yyyy' name='endDate' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='City Filter by State' name='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='State Dashboard' type='sheet'>
        <exclude-sheet name='Heat Map by Zip Code' />
        <exclude-sheet name='Company Pie Chart' />
        <exclude-sheet name='Total Number of Bikeshare Stations by City' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Total Number of Bikeshare Stations by State from 2015-2024,Heat Map by Zip Code,Company Pie Chart,Total Number of Bikeshare Stations by City' />
        <param name='special-fields' value='all' />
        <param name='target' value='State Dashboard' />
      </command>
    </action>
    <edit-parameter-action caption='&lt;Selected Date&gt;' name='[Action2_8DE7D61D6AC4453C8BF5FF11C5E1E945]'>
      <activation type='on-select' />
      <source type='all' />
      <agg-type type='attr' />
      <clear-option type='do-nothing' value='d:2025-02-28' />
      <params>
        <param name='target-parameter' value='[Parameters].[Parameter 1]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='&lt;Select State&gt;' name='[Action4_A7F618506B2E44A1AD838139C123DEA4]'>
      <activation type='on-select' />
      <source dashboard='State Dashboard' type='sheet' />
      <agg-type type='attr' />
      <clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='target-parameter' value='[Parameters].[Parameter 4]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='Company Map by Zip Code'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='12'><![CDATA[<Sheet Name> (Use Pie Chart Key)]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
              <calculation class='tableau' formula='#2015-01-01#' />
              <aliases>
                <alias key='#2015-01-01#' value='2015' />
                <alias key='#2016-01-01#' value='2016' />
                <alias key='#2017-01-01#' value='2017' />
                <alias key='#2018-01-01#' value='2018' />
                <alias key='#2019-01-01#' value='2019' />
                <alias key='#2020-01-01#' value='2020' />
                <alias key='#2021-01-01#' value='2021' />
                <alias key='#2022-01-01#' value='2022' />
                <alias key='#2023-01-01#' value='2023' />
                <alias key='#2024-01-01#' value='2024' />
              </aliases>
            </column>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
            </column>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Company Name' datatype='string' name='[SYSTEM_NAME]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='33589' value='27.699999999999999' />
                <semantic-value key='80000' value='39.75' />
                <semantic-value key='85288' value='33.43' />
                <semantic-value key='94199' value='37.770000000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='33589' value='-82.299999999999997' />
                <semantic-value key='80000' value='-104.98999999999999' />
                <semantic-value key='85288' value='-111.91' />
                <semantic-value key='94199' value='-122.41' />
              </semantic-values>
            </column>
            <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2287547187932200960]' derivation='None' name='[none:Calculation_2287547187932200960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[SYSTEM_NAME]' derivation='None' name='[none:SYSTEM_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIPCODE]' derivation='None' name='[none:ZIPCODE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[YEAR]' derivation='Year-Trunc' name='[tyr:YEAR:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (City,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[CITY]' />
              <groupfilter function='level-members' level='[tyr:YEAR:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[STATE]' />
              <groupfilter function='level-members' level='[tyr:YEAR:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name)]'>
            <groupfilter function='level-members' level='[SYSTEM_NAME]' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187932200960:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Longitude (generated)]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State,YEAR(Year))]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (City,YEAR(Year))]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State)]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' value='false' />
            <format attr='break-on-special' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' value='false' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' />
              <color column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' />
              <geometry column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='red_green_gold_diverging_10_0' type='interpolated' />
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='density-intensity' value='1.1802654266357422' />
                <format attr='density-kernel-size' value='2.9060773849487305' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='mark-transparency' value='190' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Latitude (generated)]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C1FB14D9-1CD7-4CCA-BABC-6902192573AA}' />
    </worksheet>
    <worksheet name='Company Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='11'>Station Company Percentage</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
              <calculation class='tableau' formula='#2015-01-01#' />
              <aliases>
                <alias key='#2015-01-01#' value='2015' />
                <alias key='#2016-01-01#' value='2016' />
                <alias key='#2017-01-01#' value='2017' />
                <alias key='#2018-01-01#' value='2018' />
                <alias key='#2019-01-01#' value='2019' />
                <alias key='#2020-01-01#' value='2020' />
                <alias key='#2021-01-01#' value='2021' />
                <alias key='#2022-01-01#' value='2022' />
                <alias key='#2023-01-01#' value='2023' />
                <alias key='#2024-01-01#' value='2024' />
              </aliases>
            </column>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
            </column>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Company Name' datatype='string' name='[SYSTEM_NAME]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2287547187932200960]' derivation='None' name='[none:Calculation_2287547187932200960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[SYSTEM_NAME]' derivation='None' name='[none:SYSTEM_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187932200960:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' direction='DESC' using='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' />
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='258' />
            <format attr='height' value='251' />
            <format attr='cell-w' value='176' />
            <format attr='cell-h' value='176' />
            <format attr='cell' value='22' />
            <format attr='cell-q' value='110' />
            <format attr='text-align' data-class='total' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='auto' />
            <format attr='vertical-align' data-class='total' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='auto' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='auto' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='-90' />
            <format attr='text-align' data-class='total' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[pcto:cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='auto' />
            <format attr='vertical-align' data-class='total' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[pcto:cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='auto' />
            <format attr='vertical-align' data-class='subtotal' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[pcto:cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='auto' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[pcto:cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='-90' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' value='Company Name'>
              <formatted-text>
                <run>Company Name</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' />
              <wedge-size column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' />
              <text column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[pcto:cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
                <format attr='vertical-align' value='auto' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Tableau Regular' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5F03F2CF-6CBE-47F9-AAC0-E4D536141377}' />
    </worksheet>
    <worksheet name='Heat Map by Zip Code'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
              <calculation class='tableau' formula='#2015-01-01#' />
              <aliases>
                <alias key='#2015-01-01#' value='2015' />
                <alias key='#2016-01-01#' value='2016' />
                <alias key='#2017-01-01#' value='2017' />
                <alias key='#2018-01-01#' value='2018' />
                <alias key='#2019-01-01#' value='2019' />
                <alias key='#2020-01-01#' value='2020' />
                <alias key='#2021-01-01#' value='2021' />
                <alias key='#2022-01-01#' value='2022' />
                <alias key='#2023-01-01#' value='2023' />
                <alias key='#2024-01-01#' value='2024' />
              </aliases>
            </column>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
            </column>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='33589' value='27.699999999999999' />
                <semantic-value key='80000' value='39.75' />
                <semantic-value key='85288' value='33.43' />
                <semantic-value key='94199' value='37.770000000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='33589' value='-82.299999999999997' />
                <semantic-value key='80000' value='-104.98999999999999' />
                <semantic-value key='85288' value='-111.91' />
                <semantic-value key='94199' value='-122.41' />
              </semantic-values>
            </column>
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2287547187932200960]' derivation='None' name='[none:Calculation_2287547187932200960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[ZIPCODE]' derivation='None' name='[none:ZIPCODE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187932200960:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' value='false' />
            <format attr='break-on-special' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' value='false' />
            <format attr='show-null-value-warning' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' value='false' />
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-temperatur-light' />
            <format attr='geo-area-type' value='Tract' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' />
              <lod column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]' />
              <lod column='[Parameters].[Parameter 4]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <encoding attr='density-color' palette='red_green_gold_diverging_10_0' type='interpolated' />
                <format attr='density-kernel-size' value='3.3922650814056396' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Latitude (generated)]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E2462884-4CC9-4ED4-9229-8C44FAA137FC}' />
    </worksheet>
    <worksheet name='New Stations by City'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Company Name' datatype='string' name='[SYSTEM_NAME]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column aggregation='Sum' caption='Zipcode' datatype='integer' default-format='*00000' name='[ZIPCODE]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='33589' value='27.699999999999999' />
                <semantic-value key='80000' value='39.75' />
                <semantic-value key='85288' value='33.43' />
                <semantic-value key='94199' value='37.770000000000003' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='33589' value='-82.299999999999997' />
                <semantic-value key='80000' value='-104.98999999999999' />
                <semantic-value key='85288' value='-111.91' />
                <semantic-value key='94199' value='-122.41' />
              </semantic-values>
            </column>
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='Year-Trunc' name='[tyr:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[YEAR]' derivation='Year-Trunc' name='[tyr:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State)]'>
            <groupfilter function='level-members' level='[STATE]' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State,YEAR(Year))]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[STATE]' />
              <groupfilter function='level-members' level='[tyr:YEAR:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name)]'>
            <groupfilter function='level-members' level='[SYSTEM_NAME]' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name,Zipcode)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[SYSTEM_NAME]' />
              <groupfilter function='level-members' level='[ZIPCODE]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:CITY:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' direction='DESC' using='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' />
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State,YEAR(Year))]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name,Zipcode)]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (State)]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' scope='rows' value='New Stations' />
            <format attr='height' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:ok]' value='57' />
            <format attr='display' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]' field-type='quantitative' major-origin='#2016-01-01 00:00:00#' major-spacing='1.0' major-units='years' max='#2022-01-01 00:00:00#' min='#2015-01-01 00:00:00#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]' scope='cols' value='Year' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:ok]' value='127' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:ok]' value='true' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='font-size' value='9' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='left' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' value='City'>
              <formatted-text>
                <run fontname='Tableau Regular'>City</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' value='3. Select City:'>
              <formatted-text>
                <run bold='true' fontsize='12'>3. Select City:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{686BF165-2E23-4708-8036-89F099A93627}' />
    </worksheet>
    <worksheet name='Total Number of Bikeshare Stations by City'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='12'>Stations by City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
              <calculation class='tableau' formula='#2015-01-01#' />
              <aliases>
                <alias key='#2015-01-01#' value='2015' />
                <alias key='#2016-01-01#' value='2016' />
                <alias key='#2017-01-01#' value='2017' />
                <alias key='#2018-01-01#' value='2018' />
                <alias key='#2019-01-01#' value='2019' />
                <alias key='#2020-01-01#' value='2020' />
                <alias key='#2021-01-01#' value='2021' />
                <alias key='#2022-01-01#' value='2022' />
                <alias key='#2023-01-01#' value='2023' />
                <alias key='#2024-01-01#' value='2024' />
              </aliases>
            </column>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
            </column>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187932200960]' derivation='None' name='[none:Calculation_2287547187932200960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:CITY:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187932200960:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]' value='142' />
            <format attr='text-format' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='*' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' value='112' />
            <format attr='total-label' data-class='total' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' value='State Total' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5A254B40-FAC9-4F81-8702-2E9841D0B94B}' />
    </worksheet>
    <worksheet name='Total Number of Bikeshare Stations by Company'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='11'>Stations by Company</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
              <calculation class='tableau' formula='#2015-01-01#' />
              <aliases>
                <alias key='#2015-01-01#' value='2015' />
                <alias key='#2016-01-01#' value='2016' />
                <alias key='#2017-01-01#' value='2017' />
                <alias key='#2018-01-01#' value='2018' />
                <alias key='#2019-01-01#' value='2019' />
                <alias key='#2020-01-01#' value='2020' />
                <alias key='#2021-01-01#' value='2021' />
                <alias key='#2022-01-01#' value='2022' />
                <alias key='#2023-01-01#' value='2023' />
                <alias key='#2024-01-01#' value='2024' />
              </aliases>
            </column>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
            </column>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Company Name' datatype='string' name='[SYSTEM_NAME]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187932200960]' derivation='None' name='[none:Calculation_2287547187932200960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[SYSTEM_NAME]' derivation='None' name='[none:SYSTEM_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:CITY:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187932200960:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]' value='46' />
            <format attr='text-format' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='*' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' value='112' />
            <format attr='total-label' data-class='total' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' value='State Total' />
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' value='136' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7BEA17A6-E05B-4017-B58F-183EF0B2D892}' />
    </worksheet>
    <worksheet name='Total Number of Bikeshare Stations by State'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='12'>Stations by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
              <calculation class='tableau' formula='#2015-01-01#' />
              <aliases>
                <alias key='#2015-01-01#' value='2015' />
                <alias key='#2016-01-01#' value='2016' />
                <alias key='#2017-01-01#' value='2017' />
                <alias key='#2018-01-01#' value='2018' />
                <alias key='#2019-01-01#' value='2019' />
                <alias key='#2020-01-01#' value='2020' />
                <alias key='#2021-01-01#' value='2021' />
                <alias key='#2022-01-01#' value='2022' />
                <alias key='#2023-01-01#' value='2023' />
                <alias key='#2024-01-01#' value='2024' />
              </aliases>
            </column>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='Calculation1' datatype='boolean' name='[Calculation_1165587931112943623]' role='measure' type='nominal'>
              <calculation class='tableau' formula='first()=0'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Display Date' datatype='boolean' name='[Calculation_2287547187932200960]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1] &gt;= [YEAR] AND [Parameters].[Parameter 1] &lt;= IFNULL([endDate], DATE(&apos;9999-12-31&apos;))' />
            </column>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Company Name' datatype='string' name='[SYSTEM_NAME]' role='dimension' type='nominal' />
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column aggregation='Count' caption='End Date' datatype='date' datatype-customized='true' name='[endDate]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_2287547187932200960]' derivation='None' name='[none:Calculation_2287547187932200960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1165587931112943623]' derivation='User' name='[usr:Calculation_1165587931112943623:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name)]'>
            <groupfilter function='level-members' level='[SYSTEM_NAME]' user:ui-action-filter='[Action6_D6E910B729A04B9990B0C85B9EDD26F6]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187932200960:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[usr:Calculation_1165587931112943623:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_1165587931112943623:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[Action (System Name)]</column>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[usr:Calculation_1165587931112943623:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]' value='108' />
            <format attr='height' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]' value='20' />
            <format attr='text-format' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' value='*' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]' value='22' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7E8FC158-5BE1-4A9B-A6E9-538A07505659}' />
    </worksheet>
    <worksheet name='Total Number of Bikeshare Stations by State from 2015-2024'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Regular' fontsize='12'>New Stations by State</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
              <calculation class='tableau' formula='&quot;(All)&quot;' />
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
            <column caption='Display State' datatype='boolean' name='[Calculation_2287547187950948355]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[STATE] = [Parameters].[Parameter 4] OR [Parameters].[Parameter 4] = &quot;(All)&quot;' />
            </column>
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <aliases>
                <alias key='&quot;NB*&quot;' value='NB' />
              </aliases>
            </column>
            <column caption='Year' datatype='date' datatype-customized='true' name='[YEAR]' role='dimension' type='quantitative' />
            <column caption='cleaned_bikeshare_stations.csv' datatype='table' name='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2287547187950948355]' derivation='None' name='[none:Calculation_2287547187950948355:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='Year-Trunc' name='[tyr:YEAR:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]'>
            <groupfilter function='member' level='[none:Calculation_2287547187950948355:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]' direction='DESC' using='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' />
          <slices>
            <column>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]' scope='rows' value='Bikeshare Stations' />
            <format attr='title' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]' field-type='quantitative' major-origin='#2015-01-01 00:00:00#' major-spacing='1.0' major-units='years' max='#2023-01-01 00:00:00#' min='#2015-01-01 00:00:00#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='300.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='true' />
            <encodings>
              <color column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]' />
              <lod column='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01lywv000c3tud1d7mmhw1czv3dz].[__tableau_internal_object_id__].[cnt:cleaned_bikeshare_stations.csv_4CB5F80719594EBEBF3B752260803516:qk]</rows>
        <cols>[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]</cols>
      </table>
      <simple-id uuid='{0D9A55C0-6B25-4D10-BC45-971328CD32DA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='State Dashboard'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='cleaned_bikeshare_stations' name='federated.01lywv000c3tud1d7mmhw1czv3dz' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='2015' caption='Select Date' datatype='date' name='[Parameter 1]' param-domain-type='list' role='measure' type='quantitative' value='#2015-01-01#'>
          <calculation class='tableau' formula='#2015-01-01#' />
          <aliases>
            <alias key='#2015-01-01#' value='2015' />
            <alias key='#2016-01-01#' value='2016' />
            <alias key='#2017-01-01#' value='2017' />
            <alias key='#2018-01-01#' value='2018' />
            <alias key='#2019-01-01#' value='2019' />
            <alias key='#2020-01-01#' value='2020' />
            <alias key='#2021-01-01#' value='2021' />
            <alias key='#2022-01-01#' value='2022' />
            <alias key='#2023-01-01#' value='2023' />
            <alias key='#2024-01-01#' value='2024' />
          </aliases>
          <members>
            <member alias='2015' value='#2015-01-01#' />
            <member alias='2016' value='#2016-01-01#' />
            <member alias='2017' value='#2017-01-01#' />
            <member alias='2018' value='#2018-01-01#' />
            <member alias='2019' value='#2019-01-01#' />
            <member alias='2020' value='#2020-01-01#' />
            <member alias='2021' value='#2021-01-01#' />
            <member alias='2022' value='#2022-01-01#' />
            <member alias='2023' value='#2023-01-01#' />
            <member alias='2024' value='#2024-01-01#' />
            <member value='#2024-08-21#' />
          </members>
        </column>
        <column caption='Select State' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;(All)&quot;'>
          <calculation class='tableau' formula='&quot;(All)&quot;' />
          <aliases>
            <alias key='&quot;NB*&quot;' value='NB' />
          </aliases>
          <members>
            <member value='&quot;(All)&quot;' />
            <member value='&quot;AL&quot;' />
            <member value='&quot;AR&quot;' />
            <member value='&quot;AZ&quot;' />
            <member value='&quot;CA&quot;' />
            <member value='&quot;CO&quot;' />
            <member value='&quot;CT&quot;' />
            <member value='&quot;DC&quot;' />
            <member value='&quot;FL&quot;' />
            <member value='&quot;GA&quot;' />
            <member value='&quot;HI&quot;' />
            <member value='&quot;IA&quot;' />
            <member value='&quot;ID&quot;' />
            <member value='&quot;IL&quot;' />
            <member value='&quot;IN&quot;' />
            <member value='&quot;KS&quot;' />
            <member value='&quot;KY&quot;' />
            <member value='&quot;LA&quot;' />
            <member value='&quot;MA&quot;' />
            <member value='&quot;MD&quot;' />
            <member value='&quot;MI&quot;' />
            <member value='&quot;MN&quot;' />
            <member value='&quot;MO&quot;' />
            <member alias='NB' value='&quot;NB*&quot;' />
            <member value='&quot;NC&quot;' />
            <member value='&quot;ND&quot;' />
            <member value='&quot;NE&quot;' />
            <member value='&quot;NH&quot;' />
            <member value='&quot;NJ&quot;' />
            <member value='&quot;NM&quot;' />
            <member value='&quot;NV&quot;' />
            <member value='&quot;NY&quot;' />
            <member value='&quot;OH&quot;' />
            <member value='&quot;OK&quot;' />
            <member value='&quot;OR&quot;' />
            <member value='&quot;PA&quot;' />
            <member value='&quot;SC&quot;' />
            <member value='&quot;SD&quot;' />
            <member value='&quot;TN&quot;' />
            <member value='&quot;TX&quot;' />
            <member value='&quot;UT&quot;' />
            <member value='&quot;VA&quot;' />
            <member value='&quot;VT&quot;' />
            <member value='&quot;WA&quot;' />
            <member value='&quot;WI&quot;' />
            <member value='&quot;WY&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.01lywv000c3tud1d7mmhw1czv3dz'>
        <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
        <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='42' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='41' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#f5f5f5' />
            </zone-style>
          </zone>
        </zone>
        <zone h='41667' id='43' param='vert' type-v2='layout-flow' w='12500' x='85938' y='2778'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6e6e6' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='8333' id='8' type-v2='text' w='65625' x='1563' y='0'>
          <formatted-text>
            <run bold='true' fontcolor='#404040' fontname='Inter' fontsize='24'>Interactive Bikeshare Station Dashboard (2015-2024)</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='8333' hide-buttons='true' id='13' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='9375' x='87500' y='10000'>
          <formatted-text>
            <run bold='true' fontsize='12'>1. Select Date:</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='8333' id='14' mode='compact' param='[Parameters].[Parameter 4]' type-v2='paramctrl' w='9375' x='87500' y='18333'>
          <formatted-text>
            <run bold='true' fontsize='12'>2. Select State:</run>
          </formatted-text>
        </zone>
        <zone h='36111' id='26' name='Total Number of Bikeshare Stations by State from 2015-2024' w='26563' x='29688' y='61111'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='36111' id='27' name='Company Pie Chart' w='26563' x='57813' y='61111'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='33889' id='28' name='Company Pie Chart' pane-specification-id='0' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' type-v2='color' w='9375' x='74375' y='62222' />
        <zone h='36111' id='30' name='Total Number of Bikeshare Stations by City' w='17188' x='67188' y='22222'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='36111' id='29' name='Heat Map by Zip Code' w='31250' x='1563' y='22222'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='36111' id='38' name='Company Map by Zip Code' w='31250' x='34375' y='22222'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone friendly-name='Select City' h='8333' id='39' mode='checkdropdown' name='New Stations by City' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' type-v2='filter' values='relevant' w='9375' x='87500' y='26667' />
        <zone forceUpdate='true' h='3333' id='44' type-v2='text' w='9375' x='87500' y='4444'>
          <formatted-text>
            <run bold='true' fontcolor='#898989' fontname='Tableau Regular' fontsize='12'>FILTERS</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='0' />
            <format attr='margin-bottom' value='1' />
          </zone-style>
        </zone>
        <zone h='111' id='45' type-v2='empty' w='9375' x='87500' y='7778'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='36111' id='35' name='New Stations by City' w='26563' x='1563' y='61111'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='9111' id='40' name='New Stations by City' pane-specification-id='0' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' type-v2='color' w='11000' x='16875' y='61333' />
        <zone h='11111' id='46' name='Total Number of Bikeshare Stations by State' w='12500' x='85938' y='47222'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone h='30556' id='47' name='Total Number of Bikeshare Stations by Company' w='12500' x='85938' y='61111'>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='16667' id='50' type-v2='text' w='64063' x='1563' y='6333'>
          <formatted-text>
            <run fontcolor='#404040' fontname='Tableau Regular'>Welcome to the </run>
            <run bold='true' fontcolor='#404040' fontname='Tableau Regular'>Interactive Bikeshare Station Dashboard</run>
            <run fontcolor='#404040' fontname='Tableau Regular'>! </run>
            <run>Æ&#10;</run>
            <run fontcolor='#404040' fontname='Tableau Regular'> This dynamic tool combines </run>
            <run bold='true' fontcolor='#404040' fontname='Tableau Regular'>geographical visualizations</run>
            <run fontcolor='#404040' fontname='Tableau Regular'>, </run>
            <run bold='true' fontcolor='#404040' fontname='Tableau Regular'>time-based trends</run>
            <run fontcolor='#404040' fontname='Tableau Regular'>, and </run>
            <run bold='true' fontcolor='#404040' fontname='Tableau Regular'>detailed tables</run>
            <run fontcolor='#404040' fontname='Tableau Regular'> to provide a comprehensive view of bike-sharing systems across cities. Explore station distributions on interactive maps, analyze growth trends over time, and dive into detailed data with customizable filters. Whether you&apos;re interested in specific cities, systems, or time periods, this dashboard allows you to uncover insights and make data-driven decisions with ease.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#404040' fontname='Tableau Regular'> Data Source: </run>
            <run auto-url='true' fontcolor='#404040' fontname='Tableau Regular' hyperlink='tabdoc:load-url url=&amp;quot;https://data.bts.gov/Bicycles-and-Pedestrians/Locations-of-Docked-Bikeshare-Stations-by-System-a/7m5x-ubud/about_data&amp;quot;'>https://data.bts.gov/Bicycles-and-Pedestrians/Locations-of-Docked-Bikeshare-Stations-by-System-a/7m5x-ubud/about_data</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='2778' id='49' type-v2='text' w='12500' x='85938' y='94444'>
          <formatted-text>
            <run fontalignment='2' fontname='Tableau Regular' fontsize='12'>By Andrew Mayfield</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='16667' id='51' type-v2='text' w='17188' x='67188' y='2778'>
          <formatted-text>
            <run bold='true' fontcolor='#333333' fontname='Tableau Regular'>How to Use:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontname='Tableau Regular'> 1. Start by selecting a Date you want to analyze.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontname='Tableau Regular'> 2. Next, you can select a State.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#333333' fontname='Tableau Regular'> 3. Finally, you can select either 1 or multiple Cities to analyze and compare within the selected State.</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#b4b4b4' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='2' />
            <format attr='background-color' value='#ffffff' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='11111' id='52' type-v2='text' w='11875' x='86250' y='33333'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Tableau Regular' fontsize='8'>Disclaimer:</run>
            <run bold='true' fontalignment='1' fontname='Tableau Regular' fontsize='8'>Æ </run>
            <run fontalignment='1' fontname='Tableau Regular' fontsize='8'>If no data appears for your filter, then no bikeshare stations were recorded for the selected date.</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{CA684702-E0CA-444D-8693-CA8C99475032}' />
    </dashboard>
  </dashboards>
  <windows film-mode='true' saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Number of Bikeshare Stations by City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187946008577:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{401504FB-A1FE-4F80-845D-2B0CD6D8E93A}' />
    </window>
    <window class='worksheet' name='Total Number of Bikeshare Stations by Company'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187946008577:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE892528-9700-4E90-829D-6B9BFDCF9E86}' />
    </window>
    <window class='worksheet' name='Total Number of Bikeshare Stations by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[usr:Calculation_1165587931112943623:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{384200F4-20C1-4A27-AF40-5BF4545C29BB}' />
    </window>
    <window class='worksheet' name='Total Number of Bikeshare Stations by State from 2015-2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187946008577:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{91F6CB33-05A7-486B-9CD5-3A595A206EA3}' />
    </window>
    <window class='worksheet' name='Heat Map by Zip Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_1165587931067629571:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187946823682:qk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
      </viewpoint>
      <simple-id uuid='{EC2E994E-2A42-42EA-B167-69F99EA9FCDE}' />
    </window>
    <window class='worksheet' name='Company Map by Zip Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card pane-specification-id='0' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187946823682:qk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:ZIPCODE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71FE3BC9-D49E-41B5-BA28-2288133A4FA4}' />
    </window>
    <window class='worksheet' name='Company Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187932200960:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8906B5A-ED5A-4CBB-93AC-F17930F802E3}' />
    </window>
    <window class='worksheet' name='New Stations by City'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_1165587931033247745:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:Calculation_2287547187950948355:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:ok]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[tyr:YEAR:qk]</field>
            <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[yr:YEAR:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{D99ACE50-50E5-4862-9C0C-A2BF3B6B14E2}' />
    </window>
    <window class='dashboard' maximized='true' name='State Dashboard'>
      <viewpoints>
        <viewpoint name='Company Map by Zip Code'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Company Pie Chart'>
          <highlight>
            <color-one-way>
              <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:SYSTEM_NAME:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Heat Map by Zip Code'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='New Stations by City'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:CITY:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Number of Bikeshare Stations by City'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Number of Bikeshare Stations by Company'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total Number of Bikeshare Stations by State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Number of Bikeshare Stations by State from 2015-2024'>
          <zoom type='entire-view' />
          <highlight field='[federated.01lywv000c3tud1d7mmhw1czv3dz].[none:STATE:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F7350E72-0A99-4A00-8647-B24B654D03BF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Company Map by Zip Code' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Company Pie Chart' width='192'>
      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
      +H+8Yi3zxwMX2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heat Map by Zip Code' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New Stations by City' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3hc13mo++49vXcMMAAIAiRAECySSJGiSImimi13O849PsdxnDg3iRMf
      yzWJc+wcJ7lpzkkc27l2ilOsOBZjKZIsW4Wk2DtIsKIDg5kBBhjMDKb3umffH6BIsYpSlHIt
      vM9D4pm11/r2at9e5VtFKBQKMkss8TZF/M+OwBJL/GeypABLvK1ZUoAl3tYsKcASb2uUt3qY
      iQZ5cd9RHnnvz+K2aG7qr1GvUJUUaDW3FPemqZWLoNajqmV48pkXuXfHY3S1Ot6UrKB3kKOn
      hy7/Vmv13Hv/DtqabFQyUZ55cR87HvsgxdAop70L/NyH3/Om431s30vUjR52bLnrTcu4FXKj
      zunjR/DNhjFYHGy7736cFsPiM1miVK6h12lvGv5KucGPn3qKzg33s7572ZuOTyER4vndhy7/
      Nlmd3Hf//djN+jcsa99Lz2L09LHlrtW35f5muWULkI0G2blzJ9Fs5aZ+CvEgn/61X2FyofiW
      ROha5n2D/Oovf4pU7a2RF/QOsfOHz3BxaIihoSF2/fgZPvuZz7OQv/oF3qEz7HzupX/Tu47t
      e4lD/ef/TTJuxT9+8w/4w69/h/MXBvnRvzzBpz79eWK5KpTT/NZnPsXJ4dmbhv33KLdCcp6d
      O3dy8sx5Bi9eZOcTf8unHv8c4dQbf8e+l56j//zYbbu/WW77kx30DnJydJ5NPc2cujBG99qN
      3L2uhz0vPMtMOMG+F5+h9eMfR1tPc+DAISqouf+BB3HbTXgHBxidz2EhT03fzCPb7uTYoYME
      I3Hs7jYe2nE/GqVItZTj0MGDxDMl1ty1iTt6W/nx08+xkErx/FPP8gsfeeRyfHY9/xTOFXex
      aV0PUjnDvz77IpseeAfLm4wcOrCfhUyJu7fcR3dHy/WJUdv5g699DQ2Qmr7Ax/7nV/AFY2xo
      Vdww7f2H9jATL/OBD74fsZbnwP4DZEp1ttz3AB0tTuRGnf5jhwnMRjDZXWzf/gAWw6UWs1Hn
      2IE9hBIFdjz8KG67iVo5z6GDB1lI5mjpWMkD2zYjFxM89fxuuntWEQhM8873foBqcpbDx0+h
      s7h4cMcODNrXFledU6fO8PAHf5nP/eKHKCVn+cP/8x2mArNMzJ5i1D+H5dBuupc1YVWVOXTo
      KPlKnVXrNrJxbfc15fZzV6W3lEtx6NBh0sUaG+/ZSs/yVqgstr5337OV8YtnUBgdPPrIg2gU
      wnX59atf+Crr281kYzP82ic/zTMv7OXxj3+A2Pw0R46doioL3LVpK71dbUjVEkcOHWQ+lsLZ
      3Mb27fehUykuZV2FA3teJFFo8PCjj2I36S6779/9IukKPPTQw9guuU+NnufMxTHMjmYeeGA7
      Bo2SRq3MkUMHCS0kcbV0sOOBbajrWZ585kW6e1bd/hgg6B3iB9/7W7739G5mvcP87pe/xGQ4
      d5UfqZzmtz73GY6dn2Rm9AyPf/YLxHJVvENn+PvvfIMfPL+HaCLDs098m7958nmkeoV/+quv
      88S/7gapwu9/6fO8ePA0hXSY//0bn+fIRd/Vkahk2blzJ4H5JMl5P9994ofIwMWTB3nyuV1Y
      HVa+9Udf5l9eOEg+Oc9vfvbTnPfOX5+Yep6nnnySJ598ku/8/ZM0d65l3cpmKtkoO3fuZD5Z
      uOz1zIHn+eNv/C1Ny3vQijX+6Mtf5IWDp0jOT/HZTz+Odz7F7qf/gb/8h6eQZJkju37E3z35
      o8vhzx/bx6AvxPF9P+F3/vibAHz3G3/I0y8dplpK85df+31+cvAsUiHJzp07+bO/+BYXR6bI
      Rbx8+jOfJxBJc2Lvj/jNr/4p0lUWGyVbt97D3n/9e3798S/w/ecP8PFPPs6961dcndZGma/+
      5uc5cdFLfM7LV3/7NxiZTV2bIfzk6Z0MeYNUsgt87tO/zv7+QfLJeb702U9zYGDsct7/n69/
      i2Q6wT9+5+s8+fz+W9YZs6uD1Z3NeL1T1PILfPFzn2d0Jsr06Dl+84tfJFqQ+MFf/xk/eH4v
      stzgJ089wdMvHrwc/ti+F/GF4uz7yb/wx9/8u8vuR/f+hKm5GMf3/IgvfvkPqTbg8As/4Dd+
      50/IFKscfvlf+fxv/S7Fusy/fPcb/OPTLyFVS/zdX36NnT85eCUtf/6N228BABo1JZ/57d/C
      kJzg8KnfIByJc9999/EPz+zjkff+LAsTx5leyPOFT74bl7bE6f4/5OjAEFqgoTDzZ9/6f7Fp
      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
    </thumbnail>
    <thumbnail height='192' name='Total Number of Bikeshare Stations by City' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Total Number of Bikeshare Stations by Company' width='186'>
      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
    </thumbnail>
    <thumbnail height='46' name='Total Number of Bikeshare Stations by State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAAuCAYAAAB+khb1AAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEyklEQVR4nO3cf0jUdxzH8WdDG/1Y1Pq1iDhasX6Zte57aJfXrZILrZgoZCmb0RiLyo3c
      aIytbhlxjYGuRYMcG13Df4qDrSwnSzcvkHN+rcxmebjBsdqVzP4odCDfnftDl+ess/JbHvu8
      HyAc7/d9vp/vH9/X3ef7Pb/fUT09PT0IoahnRnoHhBhJEgChNAmAUJoEQChNAiCUJgEQSpMA
      CKVJAITSJABCaRIAoTQJgFCaBEAoTQIglJYw0jsgFOF3oxWdeWB7XYnOvpVPfCdwa0W0Ffoo
      L7AAEgDxtKzch67v633td6MVtVHoK6fvOHwEIbz5ORyeW4JuQmJkCSSUJgEQ8aX7d37wbMXl
      0NC05ax6bS+ngt29vZCXfC2Hw63AmSI0TUPTNNz+3na7v5Ttm1w4+uoO11Y8NWGMGNNJAEQc
      uYXvnY3svWblk+8C6IFqvlgVwlPwJuUhwFJAue6jcB6wrgRd19H1/nOH8B+Q8ZGXqoCOHvBT
      tulvTu3eg+/Wg2eUAIj40XicIw0z2PLhDl5+PgESxrJgazHbXvyFr040Djl8yaZdbEiawdgE
      esfm5mLnEi2tDx4jJ8Eibty4doU7LGbBS9FVC7Pnwp1LVwhhJdY5sxGu4fD+Miqb27j9V399
      XYwx8g0g/h+MRkq37Ob78fkcrQr0LY9KYh78IAEQcWTm/CQm0MzVYHQ1yNVmmLA0KeanPzeu
      cKljDrnbNjB77MMvbCQAIn5YX2eHLcyxA0e4eNsAo4urXx/gWHgRb2y09r3JQtLSCRCopua2
      AXTT3Q1MeYGZib9SfS5INwZdYR3veyXUDDGlBEDEkenkHDpB8fxG3n81FS11Ddt/tPCB90vy
      oz7+rW99RuHiJtyuVLTlazl0ERi3hl17Mun8Jg+7toq8/eeZ9e7brB5ixlHyYCyhMvkGEEqT
      AAilSQCE0iQAQmlDXjDVdf1p7IcQI0KuAgmlyRJIKE0CIJQmARBKG1YAQt78vrty8vGGYvX7
      79oB8Ls1NM2Nf/AQIR5JMBgkLy+PsrKyAfXLly/jdDrvHX/Rf5mZmbS3twNm3A8wJ4us574l
      oHdQYJkc1ehAD/zG2rXpVFWdG/Y0QkS7e/cupaWlXLhwgWnTpg3qJycnU1tbO6ju9/upqKhg
      4sSJgBlLoIRZZGTYaDj3Ex3R9c566hrsrFjx7LCnEOK/KioqSE5O5uTJk2ia9lBjDMOgsrKS
      9evXM3r0aMCkc4ApWirzGuqo74yarLGeOpudlPFmzCDEQJs3byYrK4vExMSHHtPU1ERXVxc2
      m+1ezZyTYIsN+4w66hv7779vqj/PolfSmBxjmBBPi2EYnD59muzsbMaMGXOvbtJVoIXs+Dib
      858epQUg5KXEn0NR7nRzNi/EMEQiETweD8uWLcPpdA7omXcZdEkKjj/raAhBhx4gvDKVhaZt
      XIjH19bWxs2bN3E4HIN65gUgwUqKvZWAHqK+rpWM1dahxwjxhEUiEc6ePYvdbmfSpEmD+ib+
      EDYO5xonDf7Pqf7ZQcoS87YsxOO6fv06LS0tuFyu+/ZNfS7QuBQ7tr0eap3FFMsTh8QT0tnZ
      yc6dO2lubh5Q//fHsIMHD5Kenk4kEsHn85GWlsbUqVPvuy35b1ChtH8Aa+V9XGsKF54AAAAA
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Number of Bikeshare Stations by State from 2015-2024' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAARVElEQVR4nO3dW28bd3rH8e9weKZIkZJoUmdLluVz4rhxtmlT76JZbLZo0hboAt3dm0WB
      Agv0ri+gr6SvoAV6UWBRZAu02GZ3k02cTbKJHce2zmeaZ0o8czi9kExnIrszUihSo3k+V9Lw
      T/qRqZ84h2f+f0XXdR0hHMrV7wKE6KeuBkDTtG6+nBAnTj4BhKNJAISjSQCEo0kAhKNJAISj
      SQCEo7nNBpRyaba21wkOz1HP3EcbmKOWWUENDuKjTrGicevVm6i9qFaILjMNwEA4THWpiZLf
      IFOs42pukYhNAWXAzZQPqrpOoN2m3W4jF5aFnZgGoFAoEBgIE41PcGlugvUsVLIrqMEoXhqk
      Kho3FAVF3f8MUFX5LBD2oXSzF6i8vgb1Rrdermc8U1N4vd5+lyH6wPQT4Cj8f/gU9cmTbr5k
      T5T/7qcSAIeSs0DC0SQAwtEkAMLRJADC0SQAwtEkAMLRJADC0az1AqXSjE1MsrW5SSyepF7K
      oAai+KhTqGrMzUz1olYhus5SL5C+vUWlDtPjSTYzaRQtSHOvSA0IsN8L5G23T77aE6JpGq1W
      q99liD4wDUC92WZybITVrS0KgSCXZ6f56qt1oNkZoyoKqqpi11viVVXF7e7qRXFhE+bvut5i
      J9dg9vwYaxtbpDIVEsOhTjNcoaIhTQTCrkwDEAhFmLsQAeDSpUvfeNRPMnQSZQnRG3IWSDia
      BEA4mgRAOJoEQDiaBEA4mgRAOJoEQDiaaQDq1T0WllZo67C5vkZT08mndyiVa9TKJXbS+V7U
      KcSJML0QpqMyEtK59+kXjJyfZnHxIbQ9kC0A4AEa8ZhcDRa2ZBoAr1thrVBFb9YJhcNUcxq4
      wp3H/YCm62jSDCdsyNLEWG1dYeb6VbYe3ycxeYHdzKahHTqgKCDNcMKGTN/1oXiSoXgSgMjV
      6wDEwnOdx0dOqDAhekHOAglHkwAIR5MACEeTAAhH6+qpj38ZWGWlsdzNl+yJf+53AaJvuhqA
      VHWbtT37BUA4l+wCCUeTAAhHszYx1s4m7aaHmqoQ9PupFbKySJ44E0wDEAoF0XQv4+NDLKyn
      cAUVIi9YJM+upBfIuUwDsLq6htutUq23CAR8eD0R6qXUCxfJsyPpBXIu03d9dv5K5+vRzldj
      na9kVlBhZ3IQLBxNAiAcTQIgHE0CIBxNAiAcTQIgHE0CIBytq1d/3hl6h++pd7r5kkKcKIuL
      5KUYGhkj/WSH0Ykp0htLhhVibly7hAI063Ua1UoPyhaiO0wDEImNkE4/obC1QdPvp1jcxuNP
      QLtMCxcJv4uy9AIJmzINwOP7n1ImwGRykNJWnqY7RCW/1ukGXato3DpYJM+upBfIuUzf9YvX
      b3W+Hk5MHHw1e1L1CNFTchZIOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOJoEQDia6YWw3UKG
      ze00E7MXaRZ3aHmHqOa3DCvEzM3IrfHCnsznBYoMMVLbpZQrsFdIQ0BB1QI094rUgAD78wJ5
      pRdI2JBpALKpTTRPDL9WodjWKOSLxAI+oNkZo0ovkLAp03fd4/WRy6QYmzzPlXicSgPqu1lD
      O7QskSrsyjQA0eFzRIfPdb4P+iHoTx585ycZOqnShDh5chZIOJoEQDiaBEA4mgRAOJoEQDia
      BEA4mgRAOJppANqtBotLK7R1nY3VZSr1Jvn0DqVyjVq5xE4634s6hTgRphfCypUKySEPC0vb
      jI0mWVl8iMsVgGwBAA/QiMfkarCwJfMGGK3FRq7F/HSC+18tMn9llvXlZ3/1/YCm62jSDCds
      yDQAe+UytGo8SWVQ3G7y+QYetWpohw4oCkgznLAh03d9dGK6szhe4unGkWjn8ZGvjS1vLVLY
      WutacT3z/R/2uwLRJ139s1fJPWE3td7NlxTiRMlpUOFoEgDhaBIA4WgSAOFoEgDhaIcCUK1W
      2dzcRO9HNUL02KHToB/86j/Y3qryvR//PeNHvN+3kZympni6VZsQJ+5QAAZjE8RGwwz7978v
      5dJs7WziUkLsNesMRgbZzex0lkgqVjRuvXoTFfjA5ee+K9jjH+Hb+1m/CxB9cygAmVyWsclB
      nu4DhUJBNN1LwO1i/PJ1UktfEIlNAWXAzZRvf2IsWSRP2NGhALgVndXVVc5fuoEfWF1dw+1W
      GYwPsvjFPYYT4+xlNjrzAqUqGjcUBUV6gYQNHXrXm60WrUaLp3/PZ+evdB6Lxg46fxJDnW0y
      K6iws0MBCAZDaAp45ASpcABDAL766gGNWpV6A1raNx8V4uwx/IrPX5xHUSDqaVO37zGtEJYZ
      dnTS26v8/u5dPny4TdTXr5KE6B1DABITs7jLG2TSWQr1fpUkRO8cOtS98/ZPSA4PMiAXdIUD
      GAKQTW3wP//7W1yNErvNFz1FiLPDcBDs9gZ5/Tu3ye+1OBfoV0lC9I4hAI8WF9Cre2itJtvl
      a4yGoFWvsLyZZnYizqOFFUZGJ6gWnjhykbxyudzvEo7F4/Hg9crMTc9jCMBIOMiW7mPm3CBD
      B58ALd2FrtWplQrUdIViIYWiBZ25SN5//oLQbunkC+qy3T/7Lq6Z2X6XcSoZAjBz6Tr1P9xF
      9w2iKvvb/P79ttBKuUxyYors+gJut4vnLZJ3NT5B2B3uWfHdYrUXyK4nxlyKS3qdXuDQ/8rS
      /Q9Qtku8fOdNxoJQzKXR2zqeoXEqmR0uzF+jVsw8d5G8ROwCLp/W4x9BiOM7FIDAyBzx6fOM
      HbT1Dw7FGRyKAxANX9gfE5dF8sTZcOg6QDGXZvnxA3Yb/ShHiN469Amgantspz3IjoxwgkOf
      APM3XmHQ70buihdOcCgA6+s7hMLBzlkgIc4yQwDuffIBK9u5ftUiRM8ZjgGu33qd+PgsD+/f
      xy/NcMIBDu0C/frdf6VSbZCp9qMcIXrr0Fmg0dFJhs5fJXJwQ8zTXqCLM5MsPn5ELDHBXm7n
      ub1AQVeLsEumFxH2cSgATzYXuLdR5UdTPyWkPusFyq8vkq1DqLlLUws8txdoOvc5yUK29z/F
      t6TN/eWZnheorbfP9M/3bRwKwPxrP2R6N9d54GkvkNvn5VwiSjG7ga77eV4vkF1JL5BzGf5X
      7n3yAb97/z1KaoKLt74LPOsF0oJx/KUMiZlLL+wFOusehjQ0xX53Ck2620jHyvMZb4gJRjk/
      c5FSHfSDC2Ff7wUivL+v79ReoH+r3WWtstzvMo7sn7Q/Imk+zJEMZ4G8eoNwfByXN0xIZoUQ
      DmAIQL7aoF6t8sblKBvFfpUkRO8YAqC2qmSyOd77fJ2Yv18lCdE7hmOAm6/d4eZr/SpFiN6T
      KXCFo8nJYdGRv/sR3hX7neVqnJ8hdvt4uy4SANHhrddsOesF9dqxn2opAKVSiUgkQq1coqUG
      aO5mDRfCkvEYAMOhWXR99NjFCNFrpgEol3I8Wtrk1ZvXWV36EiV8nnatDNkCAB6gEY/hBXwt
      HZf9LpQitz87l2kAQpEhIqEMua0Vyi2Fej7NufCzJZL8gKbraE6YGMumdIvNcLpuz/tgdV0/
      9vtnGoBiLk2lXMGVnOdWIkF2F8r5LUM7dEBRQFWx66/QWV8kT7HYDKco9rwPVlGUY79/ps8a
      HIpz82kvEDAcheHoXOf7kWP9s0KcDnIdQDhaVz/3K8EHtPUn3XzJnvAjE8c6VVcD4Fa+RFcX
      uvmSPfITS6Ouhq8y6k6ccC3dF3FH+l3CqXV2j/xOwLQ+wag+ZD7wlAkhq528iBwDCEeTAAhH
      kwAIR5MACEez1Av0+cMVbt+4xMLKOrrLTb2URw0O4qNOsaJx69Wb2HdSFPHUlq9NIWK/Zq6o
      r81FC+NKK8uodz8ybLPUCzQczeD2B/EobWLJCAU1DJQBN1O+/YmxAtILdGq129Z6gd5vLPDL
      yn/1oKLueqvhZab1huk4pdk81O5tqRcom8my6YZcHQYaXpq1tU47dKqicUNRUBwwMZberKM3
      7DdpqqIgvUDsTxD2TZZ6gV5/fb8XaPxgW2Ik2nncGSsE70s//ITd1Hq/yziy2ctX+l3CqSUH
      wcLR5EqwcIwdd4PfDqYM27oaAL3+I/SK/faRrUpPXSEdG+t3GUdWD0ovEEBO2+Xd8seGbV0N
      wFm/JfLLVpulhv3Wz/xB2553evWCHAMIR5MACEeTg+Aj+NOpa1xv2m93YiQ42O8STi0JwBH4
      /CMEvPZbPtOlOmUJk6Oz1Au0sJbi+tw49x+tMZwYYy+zYZgY68a1S9jzGqJwOku9QAFfhvRm
      hgs3rpNa+gKPPwHtMi1cJPwuyge9QA/8Afba9muJeMliL9BUfR3Nhj1DgdYMrVbYdNxZnxdI
      1w/3q1nqBVpfX+faxQs8/OIeg5Eou5m1TjfoWkXj1sEieVuKn7Riv12EVyz2AoUqaZR6uQcV
      dZenPSG9QOzPj/RNlnqB3vzzNwFITh5sPD/54icIcUqNecf4efLnhm1yECwcQ29rNKoVwzYJ
      wBEMD8zgs+PSUW4HLeX5/2g369QyG4ZtEoAj8LUgaMNWj7o9j227rlHdI/3oM8O2rgbA5b6H
      6sl18yV75K1+F3AqXApexjdiv+aA88H5Yz+3qwHIKwuklLVuvmSPSAAAAk0XsbL9zuIFmscP
      rewCiY7S5hIbH/93v8s4sqBHgduvH+u5EgDRsT06yyevfL/fZRxZePT4kxtLAERHvlZjqVjo
      dxlH9lLthBfJA9AaFR4trDAyOkG18MSwQszcjJNujT+7fpCI84bbfjfQB4fj5oNewHIAaqUC
      NV2hWEihaEGae0VqQID9eYG8DpgXqG7Tz0ura4RR3cVVTJmPO22CAWu9QM/5HbX8llbKZZIT
      U2TXF3C7XcCzE+LqQS+QXVleI8z37yjeDfNxp43nH3G7kxbG+dB9Nrxo5vFZev8aA1HWL3/H
      sM1yAOJTF1hdWebC/DVqxYyhHfppt3kiN4mnZMO56C/0u4DTYUiJElDtdxq0qlgLbamt8+E3
      7um2/qGuuJie2f9NCcSf/jXxk/zav/34wwesLi9bfsnT4i/+5G8sjWsqx9/X7CcPvn6XcGrZ
      dK+2Pwb27tizFSJuLbg1/wNq0bsnXM0J8N8mYmGdt9HwCP9w+68N2yQAosPVmkCt268VQgtY
      m6vJrbcIN/LGbSdR0Fll17NAVu9XTSvDZF3md46dNsOK19J61b5mmcncPcM2u76lffEbT4xd
      Gx4kvuHyYGVeiJziYdGGd/R9mxvZuhqAxEgMbHjLoNjnU9qEXfab+c6nWDsF71I9+IPnDNu6
      u05wYRNPxo7rBAuAvOv3LLs/Mh94yoRdrwFvm47z4SXCCQbgrGt7fkVbz5sPPG2Ut4CY6bDx
      nRi+xZmTr6fLRi7EsHAS6LkkAEewq+fJke53GUfWtDj9b2CnydBn9pvdOxA6/rlpywFolnPc
      W9xhenqCtccPn7tInjY2REu1cMldnE6jUXhlut9VHN1o1HzMC1gOQG77CYrPTSq1QiQ2xfMW
      yfvMt8rDwINjF9MvPz7ri+RZnDjqvfbH/LL9ix5U1F1vtd9msnXddFxDKVAf+NCw7Qi9QBPs
      PFgmNHKOaiHlyEXy7MpleeKoMz4xltqk5T7mrBAu7wAvv3xj/5vxZ7s5X78T4KXwFRKts7sa
      SViJgQ1nWPBgbXLcO5FXuD1uv36nQGTC0jhPK85A4W8N27r6Z++mK0ndhheKrLr8rgI79vuk
      C/8MSJiPU1oNW079qLSsrvFz2Nn93BdHFvC2CA7Y7yyQ7j3+8Vt31wjzKbiC9tyPFBBqFwhp
      K/0u48jK7XPmg16gu60Q+iqqbr95gcq80+8SRA/UXArbfuPxkOwCiY6GGgKP/Q6CG2oIK/eE
      FRU377uN1wwkAKLj119m+d1v7NfL9cdvjPJXFiazUJQiqucTw7auBmC5EqZaGurmS/bE8adV
      EnbiK2tMfV40bPs/gOnpmbR/M0oAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
